{"version":3,"file":"app.js","mappings":";;;;;AAAA,qEAAqE,kBAAkB,gBAAgB,yBAAyB;AAChI;AACA,iBAAiB;AACjB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,WAAW;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,WAAW;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,8CAA8C;AACxG,oDAAoD,8CAA8C;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2EAA2E,4BAA4B;AACvG;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yEAAyE,gDAAgD;AACzzF;AACA;AACA,KAAK;AACL;AACA;AACA,6DAA6D,4BAA4B;AACzF;AACA;AACA,KAAK;AACL;AACA;AACA,6DAA6D,4BAA4B;AACzF;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,0DAA0D,4BAA4B;AACtF;AACA;AACA,KAAK;AACL;AACA;AACA,0DAA0D,4BAA4B;AACtF;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2EAA2E,YAAY;AACvF;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE,YAAY;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,kCAAkC;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,gBAAgB;AACpC;AACA;AACA,C","sources":["webpack://gajwa-playground/./public/rebuild.js"],"sourcesContent":["console.log(\"%c@ MYZY.SPACE 2021 POWERED BY MYZY_\", \"color: #00ff00; font-weight: 900; font-size: 1em; background-color: black; padding: 1rem\");\r\nconst font = new FontFaceObserver('dgm').load();\r\nconst display = {width : 320, height: 640, centerW : 160, centerH: 320 };\r\nconst fontConfig = {font: '32px \"dgm\"', color: '#fff'};\r\nconst config = {\r\n    type: Phaser.AUTO,\r\n    width: display.width,\r\n    height: display.height,\r\n    physics: {\r\n        default: 'arcade',\r\n        arcade: {\r\n            //debug: true\r\n        }\r\n    },\r\n    scene: {\r\n        preload: preload,\r\n        create: create,\r\n        update: update\r\n    },\r\n    parent: 'canvas',\r\n    pixelArt: true,\r\n    plugins: {\r\n        scene: [\r\n            {\r\n                key: \"PhaserNavMeshPlugin\", // Key to store the plugin class under in cache\r\n                plugin: PhaserNavMeshPlugin, // Class that constructs plugins\r\n                mapping: \"navMeshPlugin\", // Property mapping to use for the scene, e.g. this.navMeshPlugin\r\n                start: true\r\n            },\r\n        ]\r\n    }\r\n};\r\nconst game = new Phaser.Game(config);\r\nconst mainObject = {\r\n    player : 'main player',\r\n    dom : 'dom'\r\n};\r\nconst mainConfig = {\r\n    playerTarget : {x: 0, y: 0},\r\n    playerCount : 0,\r\n    playerPath : [],\r\n    playerMovable : false,\r\n    // 이동 후 바라볼 오브젝트\r\n    lookAt: null,\r\n\r\n    domTarget : {x: 0, y: 0},\r\n    domCount : 0,\r\n    domPath : [],\r\n    domFollow: false\r\n}\r\nconst timer = {};\r\nconst event = {};\r\nconst maps = {};\r\nconst ui = {};\r\nconst line = {};\r\nconst debug = {};\r\nconst status = {\r\n    scene: 'title',\r\n    index: 0,\r\n    chapterIdx: 0\r\n};\r\n\r\nfunction preload() {\r\n    // TODO 프리로드\r\n    // data\r\n    this.load.json('text', 'data/text.json');\r\n    // tile\r\n    this.load.tilemapTiledJSON(\"map\", \"map/newmap.json\");\r\n    this.load.image(\"tileset\", \"map/set.png\");\r\n    // sprites\r\n    this.load.spritesheet('player', 'image/player.png', { frameWidth: 32, frameHeight: 32, endFrame: 7 });\r\n    this.load.spritesheet('dom', 'image/dom.png', { frameWidth: 32, frameHeight: 32, endFrame: 7 });\r\n    // UI\r\n    this.load.image('nineslice', 'image/nineslice.png');\r\n    // plugins\r\n    this.load.plugin('rexninepatchplugin', 'rexninepatchplugin.min.js', true);\r\n}\r\nfunction create() {\r\n    setLines(this);\r\n    setAnimations(this);\r\n    createGraphics(this);\r\n    createUIObjects(this);\r\n    createCharacters(this);\r\n    buildMap(this);\r\n    setLayer(this);\r\n    this.input.on('pointerup', pointer => {\r\n        mainConfig.playerCount = 1;\r\n        mainConfig.playerPath = maps.navMesh.findPath(mainObject.player, { x: pointer.x, y: pointer.y });\r\n        if(mainConfig.playerPath === null || mainConfig.playerPath.length < 1) return;\r\n        if(mainConfig.playerMovable) moveCharacter(mainObject.player);\r\n        //path_log();\r\n    });\r\n}\r\nfunction update() {\r\n    let dis = {\r\n        player: Phaser.Math.Distance.Between(mainObject.player.x, mainObject.player.y, mainConfig.playerTarget.x, mainConfig.playerTarget.y),\r\n        dom: Phaser.Math.Distance.Between(mainObject.dom.x, mainObject.dom.y, mainConfig.domTarget.x, mainConfig.domTarget.y),\r\n        each: Phaser.Math.Distance.Between(mainObject.player.x, mainObject.player.y, mainObject.dom.x, mainObject.dom.y),\r\n    }\r\n    \r\n    if (mainObject.player.body.speed > 0){\r\n        if (dis.player < 4){\r\n            if(mainConfig.playerPath === null || mainConfig.playerPath.length < 1 || mainConfig.playerPath.length === mainConfig.playerCount + 1) {\r\n                mainObject.player.body.reset(mainObject.player.x, mainObject.player.y);\r\n                if(mainObject.player.anims.currentAnim.key !== 'player-stand') mainObject.player.play('player-stand');\r\n                if(mainConfig.lookAt !== null) {\r\n                    mainObject.player.setFlipX(mainObject.player.x - mainConfig.lookAt.x > 0);\r\n                    mainConfig.lookAt = null;\r\n                }\r\n            }\r\n            else {\r\n                mainConfig.playerCount++;\r\n                moveCharacter(mainObject.player);\r\n            }\r\n        }\r\n        if(dis.each > 80){\r\n            mainConfig.domCount = 1;\r\n            mainConfig.domPath = maps.navMesh.findPath(mainObject.dom, { x: mainObject.player.x, y: mainObject.player.y });\r\n            if(mainConfig.domFollow) moveCharacter(mainObject.dom);\r\n        }\r\n    }\r\n    if (mainObject.dom.body.speed > 0){\r\n        if (dis.dom < 4){\r\n            if(mainConfig.domPath === null || mainConfig.domPath.length < 1 || mainConfig.domPath.length === mainConfig.domCount + 1) {\r\n                mainObject.dom.body.reset(mainObject.dom.x, mainObject.dom.y);\r\n                if(mainObject.dom.anims.currentAnim.key !== 'dom-stand') mainObject.dom.play('dom-stand');\r\n            }\r\n            else {\r\n                mainConfig.domCount++;\r\n                moveCharacter(mainObject.dom);\r\n            }\r\n\r\n        }\r\n        else if(dis.each < 40){\r\n            mainObject.dom.body.reset(mainObject.dom.x, mainObject.dom.y);\r\n            if(mainObject.dom.anims.currentAnim.key !== 'dom-stand') mainObject.dom.play('dom-stand');\r\n        }\r\n    }\r\n    // 레이어 순서 정렬\r\n    mainObject.group.list.sort(function(a, b) {\r\n        return a.y > b.y ? 1 : -1;\r\n    });\r\n\r\n}\r\n\r\n// TODO 오브젝트 생성\r\nfunction buildMap(scene) {\r\n    // 타일맵 생성 <br>\r\n    // 네비메쉬 : maps.navMesh <br>\r\n    // 벽 레이어 : maps.wallLayer\r\n    maps.tilemap = scene.add.tilemap(\"map\");\r\n    maps.tileset = maps.tilemap.addTilesetImage(\"tileset\", \"tileset\");\r\n    maps.tilemap.createLayer(\"bg\", maps.tileset);\r\n    maps.wallLayer = maps.tilemap.createLayer(\"walls\", maps.tileset);\r\n    maps.objectLayer = maps.tilemap.getObjectLayer(\"navmesh\");\r\n    maps.navMesh = scene.navMeshPlugin.buildMeshFromTiled(\"mesh\", maps.objectLayer, 12.5);\r\n}\r\nfunction createCharacters(scene) {\r\n    // 메인 캐릭터 생성 <br>\r\n    // 플레이어 오브젝트 : mainObject.player\r\n    mainObject.player = scene.physics.add.sprite(display.centerW, 180, 'player')\r\n        .setOrigin(0.5, 1).setScale(2).setSize(16, 16).setOffset(8, 16).play('player-stand');\r\n    mainObject.dom = scene.physics.add.sprite(display.centerW - 60, 180, 'dom')\r\n        .setOrigin(0.5, 1).setScale(2).setSize(16, 16).setOffset(8, 16).play('dom-stand').setVisible(false);\r\n}\r\nfunction createGraphics(scene) {\r\n    // TODO 그래픽 생성\r\n    // 디버그 그래픽\r\n    debug.graphics = scene.add.graphics();\r\n    debug.graphics.lineStyle(1, 0x00ff00, 1);\r\n    debug.graphics.fillStyle( 0xff0000, 1);\r\n}\r\nfunction createUIObjects(scene) {\r\n    // TODO UI 오브젝트 생성\r\n    ui.cam = scene.cameras.main;\r\n    ui.skip = scene.add.rectangle(display.centerW, display.centerH, display.width, display.height, 0x00ff00, 0.1)\r\n        .setInteractive();\r\n    ui.background = scene.add.rectangle(display.centerW, display.centerH, display.width, display.height, 0x000000);\r\n    ui.title = scene.add.text(display.centerW, display.centerH, 'SHADOW OF MYZY', fontConfig)\r\n        .setAlign('center').setOrigin(0.5);\r\n    ui.largeText = scene.add.text(display.centerW, display.centerH, '', fontConfig)\r\n        .setAlign('center').setOrigin(0.5).setVisible(false);\r\n\r\n    ui.dialogGroup = scene.add.container();\r\n    ui.dialogBox = scene.add.rexNinePatch({\r\n        x: display.centerW, y: display.height - 10,\r\n        width: (display.width - 20) * 0.5, height: 180 * 0.5,\r\n        key: 'nineslice',\r\n        columns: [8, undefined, 8],\r\n        rows: [8, undefined, 8],\r\n    }).setOrigin(0.5, 1).setScale(2);\r\n    ui.dialog = scene.add.text(30, display.height - 160, '', fontConfig).setFontSize(16).setLineSpacing(4);\r\n    ui.dialogGroup.add([ui.dialogBox, ui.dialog]).setVisible(false);\r\n    \r\n    ui.skip.on('pointerup', function () {\r\n        skip();\r\n    });\r\n}\r\nfunction setLayer(scene) {\r\n    // TODO 레이어 및 그룹 오브젝트 생성\r\n    mainObject.layer = scene.add.layer();\r\n\r\n    mainObject.group = scene.add.container();\r\n    mainObject.group.add([mainObject.player, mainObject.dom]);\r\n\r\n    ui.group = scene.add.container();\r\n    ui.group.add([ui.background, ui.dialogGroup, ui.largeText, ui.title, ui.skip]);\r\n\r\n    // 레이어 정렬\r\n    mainObject.layer.add(mainObject.group);\r\n    mainObject.layer.add(ui.group);\r\n}\r\nfunction setAnimations(scene) {\r\n    // TODO 애니메이션 추가\r\n    scene.anims.create({\r\n        key: 'player-stand',\r\n        frames: scene.anims.generateFrameNumbers('player', { start: 0, end: 1, first: 0 }),\r\n        frameRate: 2,\r\n        repeat: -1\r\n    });\r\n    scene.anims.create({\r\n        key: 'player-seek',\r\n        frames: scene.anims.generateFrameNumbers('player', { start: 2, end: 3, first: 0 }),\r\n        frameRate: 2,\r\n        repeat: -1\r\n    });\r\n    scene.anims.create({\r\n        key: 'player-run',\r\n        frames: scene.anims.generateFrameNumbers('player', { start: 4, end: 7, first: 0 }),\r\n        frameRate: 8,\r\n        repeat: -1\r\n    });\r\n\r\n    scene.anims.create({\r\n        key: 'dom-stand',\r\n        frames: scene.anims.generateFrameNumbers('dom', { start: 0, end: 3, first: 0 }),\r\n        frameRate: 4,\r\n        repeat: -1\r\n    });\r\n    scene.anims.create({\r\n        key: 'dom-run',\r\n        frames: scene.anims.generateFrameNumbers('dom', { start: 6, end: 7, first: 0 }),\r\n        frameRate: 8,\r\n        repeat: -1\r\n    });\r\n}\r\nfunction setLines(scene) {\r\n    // TODO 텍스트 데이터 생성 및 정리\r\n    let jsonText = scene.cache.json.get('text');\r\n    line.chapter = jsonText.chapter;\r\n    line.task = jsonText.task;\r\n    line.opening = jsonText.opening;\r\n    line.story = jsonText.story;\r\n    console.log(line);\r\n}\r\n// TODO 동작 메서드\r\nfunction Move(character, target, speed) {\r\n    game.scene.scenes[0].physics.moveToObject(character, target, speed);\r\n}\r\nfunction moveCharacter(character) {\r\n    if(character === mainObject.player){\r\n        mainConfig.playerTarget.x = mainConfig.playerPath[mainConfig.playerCount].x;\r\n        mainConfig.playerTarget.y = mainConfig.playerPath[mainConfig.playerCount].y;\r\n        if(character.anims.currentAnim.key !== 'player-run') character.play('player-run');\r\n        mainObject.player.setFlipX(mainObject.player.x - mainConfig.playerTarget.x > 0);\r\n        Move(mainObject.player, mainConfig.playerTarget, 160);\r\n    }\r\n    else if(character === mainObject.dom){\r\n        mainConfig.domTarget.x = mainConfig.domPath[mainConfig.domCount].x;\r\n        mainConfig.domTarget.y = mainConfig.domPath[mainConfig.domCount].y;\r\n        if(character.anims.currentAnim.key !== 'dom-run') character.play('dom-run');\r\n        mainObject.dom.setFlipX(mainObject.dom.x - mainConfig.domTarget.x > 0);\r\n        Move(mainObject.dom, mainConfig.domTarget, 160);\r\n    }\r\n}\r\nfunction moveToPoint(character, x, y){\r\n    if(character === mainObject.player){\r\n        mainConfig.playerMovable = false;\r\n        mainConfig.playerCount = 1;\r\n        mainConfig.playerPath = maps.navMesh.findPath(mainObject.player, { x: x, y: y });\r\n        if(mainConfig.playerPath === null || mainConfig.playerPath.length < 1) return;\r\n        moveCharacter(mainObject.player);\r\n    }\r\n    else if(character === mainObject.dom){\r\n        mainConfig.domFollow = false;\r\n        mainConfig.domCount = 1;\r\n        mainConfig.domPath = maps.navMesh.findPath(mainObject.dom, { x: x, y: y });\r\n        if(mainConfig.domPath === null || mainConfig.domPath.length < 1) return;\r\n        moveCharacter(mainObject.dom);\r\n    }\r\n}\r\nfunction path_log() {\r\n    debug.graphics.clear();\r\n    if(mainConfig.playerPath === null) {\r\n        return;\r\n    }\r\n    let line = new Phaser.Curves.Path(mainObject.player.x, mainObject.player.y);\r\n    for (let i = 0; i < mainConfig.playerPath.length; i++)\r\n    {\r\n        line.lineTo(mainConfig.playerPath[i].x, mainConfig.playerPath[i].y);\r\n        debug.graphics.fillRect(mainConfig.playerPath[i].x - 4, mainConfig.playerPath[i].y - 4, 8, 8);\r\n    }\r\n    debug.graphics.lineStyle(1, 0xff0000, 1);\r\n    line.draw(debug.graphics);\r\n}\r\nfunction RandomPlusMinus() {\r\n    return (Math.random() > 0.5) ? 1 : -1;\r\n}\r\nfunction RandomizePos(obj, x, y, min, max) {\r\n    obj.x = x + min + Math.random() * max * RandomPlusMinus();\r\n    obj.y = y + min + Math.random() * max * RandomPlusMinus();\r\n}\r\nfunction shakeObject(obj, max, speed, time) {\r\n    if(timer.shaker !== undefined) return;\r\n    const x = obj.x;\r\n    const y = obj.y;\r\n    setTimeout(()=> {\r\n        clearTimeout(timer.shaker);\r\n        timer.shaker = undefined;\r\n        obj.x = x;\r\n        obj.y = y;\r\n    }, time);\r\n    repeat();\r\n    function repeat() {\r\n        RandomizePos(obj, x, y, 0, max);\r\n        timer.shaker = setTimeout(repeat, speed);\r\n    }\r\n}\r\nfunction typewriteText(object, txt, speed) {\r\n    eventByIndex();\r\n    game.scene.scenes[0].time.removeEvent(event.type);\r\n    const length = txt.length\r\n    // 타이핑 도중에 재실행\r\n    if(event.typing === true){\r\n        event.typing = false;\r\n        object.text = txt;\r\n        status.index++;\r\n    }\r\n    else {\r\n        object.text = '';\r\n        let i = 0;\r\n        event.type = game.scene.scenes[0].time.addEvent({\r\n            callback: () => {\r\n                object.text += txt[i]\r\n                ++i\r\n                if(i < length){\r\n                    event.typing = true;\r\n                }\r\n                else {\r\n                    // 타이핑이 끝나고 실행\r\n                    event.typing = false;\r\n                    object.text = txt;\r\n                    status.index++;\r\n                }\r\n            },\r\n            repeat: length - 1,\r\n            delay: speed\r\n        })\r\n    }\r\n}\r\n// TODO 이벤트 메서드\r\nfunction skip() {\r\n    if(status.scene === 'title'){\r\n        status.scene = 'opening';\r\n        ui.title.setVisible(false);\r\n        ui.largeText.setVisible(true);\r\n        ui.largeText.text = line.opening[status.index];\r\n        shakeObject(ui.largeText, 20, 20, 240);\r\n        status.index++;\r\n    }\r\n    else if(status.scene === 'opening'){\r\n        if(line.opening[status.index] === undefined) {\r\n            status.scene = 'chapter';\r\n            status.index = 0;\r\n            status.chapterIdx = 0;\r\n\r\n            ui.background.setVisible(false);\r\n            ui.largeText.setVisible(false);\r\n\r\n            //zoomOut();\r\n            ui.dialogGroup.setVisible(true);\r\n            dialog();\r\n            ui.skip.setInteractive();\r\n\r\n            function zoomOut() {\r\n                ui.skip.disableInteractive();\r\n                ui.cam.zoom = 4;\r\n                ui.cam.pan(mainObject.player.x, mainObject.player.y - 32, 1);\r\n                setTimeout(() => ui.cam.pan(display.centerW, display.centerH, 2800, Phaser.Math.Easing.Quintic.InOut, true), 200);\r\n                ui.cam.zoomTo(1, 3000, Phaser.Math.Easing.Quintic.InOut);\r\n                ui.cam.on(Phaser.Cameras.Scene2D.Events.ZOOM_COMPLETE, () => {\r\n                    ui.dialogGroup.setVisible(true);\r\n                    dialog();\r\n                    ui.skip.setInteractive();\r\n                });\r\n\r\n            }\r\n        }\r\n        else {\r\n            ui.largeText.text = line.opening[status.index];\r\n            shakeObject(ui.largeText, 20, 20, 240);\r\n            status.index++;\r\n        }\r\n    }\r\n    else if(status.scene === 'chapter'){\r\n        dialog();\r\n    }\r\n}\r\nfunction dialog() {\r\n    if(line.story[status.chapterIdx][status.index] === '*close*'){\r\n        event.typing = false;\r\n        ui.dialogGroup.setVisible(false);\r\n        ui.skip.setVisible(false);\r\n        eventByIndex();\r\n        status.index++;\r\n    }\r\n    else {\r\n        typewriteText(ui.dialog, line.story[status.chapterIdx][status.index], 60);\r\n    }\r\n}\r\nfunction eventByIndex(){\r\n    let chapter = status.chapterIdx;\r\n    let index = status.index;\r\n    let scene = game.scene.scenes[0];\r\n\r\n    if(chapter === 0){\r\n        if(index === 4){\r\n            mainObject.player.play('player-seek');\r\n        }\r\n        if(index === 6){\r\n            mainObject.player.play('player-stand');\r\n            setTimeout(() => mainConfig.playerMovable = true, 20);\r\n            let col = scene.physics.add.overlap(mainObject.player, mainObject.dom, function () {\r\n                console.log('found');\r\n                col.active = false;\r\n                setVisibleObjects(true, [mainObject.dom, ui.skip, ui.dialogGroup]);\r\n                moveToPoint(mainObject.player, mainObject.dom.x + 60, mainObject.dom.y);\r\n                mainConfig.lookAt = mainObject.dom;\r\n                dialog();\r\n            }, null, this);\r\n        }\r\n        if(index === 12){\r\n            setTimeout(() => mainConfig.playerMovable = true, 20);\r\n            moveToPoint(mainObject.dom, 10, 10);\r\n        }\r\n    }\r\n}\r\nfunction setVisibleObjects(bool, arr) {\r\n    // 배열 오브젝트 모두 setVisible 실행\r\n    for (let i = 0; i < arr.length; i++) {\r\n        arr[i].setVisible(bool);\r\n    }\r\n}"],"names":[],"sourceRoot":""}