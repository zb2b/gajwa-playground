{"version":3,"file":"app.js","mappings":";;;;;AAAA;AACA,qEAAqE,kBAAkB,gBAAgB,yBAAyB;;AAEhI;AACA;AACA;AACA,CAAC;;AAED,iBAAiB;AACjB;AACA,mDAAmD;;AAEnD;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA,qBAAqB,SAAS,WAAW,QAAQ;AACjD,eAAe;AACf;AACA,gBAAgB;;AAEhB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kEAAkE,8CAA8C;AAChH;AACA;;AAEA;AACA,wDAAwD,8CAA8C;AACtG,oDAAoD,8CAA8C;AAClG,sDAAsD,8CAA8C;;AAEpG,+DAA+D,8CAA8C;AAC7G,4DAA4D,8CAA8C;;AAE1G,gEAAgE,8CAA8C;;AAE9G;AACA,wDAAwD,8CAA8C;;AAEtG;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL,qEAAqE,qBAAqB;;AAE1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,oBAAoB,6BAA6B;AACjD;AACA;AACA,oBAAoB,0BAA0B;AAC9C;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,4DAA4D,4BAA4B;AACxF;AACA;AACA,KAAK;AACL;AACA;AACA,0DAA0D,4BAA4B;AACtF;AACA;AACA,KAAK;AACL;AACA;AACA,2DAA2D,4BAA4B;AACvF;AACA;AACA,KAAK;AACL;AACA;AACA,+DAA+D,4BAA4B;AAC3F;AACA;AACA,KAAK;AACL;AACA;AACA,8DAA8D,4BAA4B;AAC1F;AACA;AACA,KAAK;AACL;AACA;AACA,6DAA6D,4BAA4B;AACzF;AACA;AACA,KAAK;AACL;AACA;AACA,4DAA4D,4BAA4B;AACxF;AACA;AACA,KAAK;AACL;AACA;AACA,iEAAiE,4BAA4B;AAC7F;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA,0DAA0D,WAAW;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL,C","sources":["webpack://gajwa-playground/./public/project.js"],"sourcesContent":["// const FontFaceObserver = require('fontfaceobserver');\nconsole.log(\"%c@ MYZY.SPACE 2021 POWERED BY MYZY_\", \"color: #00ff00; font-weight: 900; font-size: 1em; background-color: black; padding: 1rem\");\n\nlet font = new FontFaceObserver('dgm');\nfont.load().then(function () {\n    //console.log('font' ,font.family , 'loaded');\n});\n\nconst display = {width : 360, height: 680, centerW : 180, centerH: 340 };\nfunction device(){\n    let varUA = navigator.userAgent.toLowerCase(); //userAgent 값 얻기\n\n    if ( varUA.indexOf('android') > -1) {\n        return \"안드로이드\";\n    } else if ( varUA.indexOf(\"iphone\") > -1||varUA.indexOf(\"ipad\") > -1||varUA.indexOf(\"ipod\") > -1 ) {\n        return \"아이폰\";\n    } else if ( varUA.indexOf(\"mac\") > -1) {\n        return \"맥\";\n    } else if ( varUA.indexOf(\"windows\") > -1) {\n        return \"컴퓨터\";\n    } else {\n        return \"기계\";\n    }\n}\n\nconst config = {\n    type: Phaser.AUTO,\n    width: display.width,\n    height: display.height,\n    physics: {\n        default: 'arcade',\n        arcade: {\n            debug: true\n        }\n    },\n    scene: {\n        preload: preload,\n        create: create,\n        update: update\n    },\n    parent: 'canvas',\n    pixelArt: true,\n};\nconst fontConfig = {font: '32px \"dgm\"', color: '#fff'};\nconst game = new Phaser.Game(config);\n// TODO: 게임 상태 매니저\nlet gameStatus = {\n    Chapter: 'load',\n    ChapterNum: 0,\n    Index: 0,\n    get chapter(){\n        return this.Chapter;\n    },\n    set chapter(value) {\n        this.Chapter = value;\n        if(value === 'story') story();\n        else if(value.split(\"-\")[0] === 'chapter') {\n            this.ChapterNum = Number(value.split(\"-\")[1]);\n            chapter(this.ChapterNum);\n        }\n        myLog.text = this.Chapter + \"-\" + this.Index;\n    },\n    get idx(){\n        return this.Index;\n    },\n    set idx(value) {\n        this.Index = value;\n        myLog.text = this.Chapter + \"-\" + this.Index;\n        if(this.chapter === 'story'){\n            if(this.idx >= line.story[0].length) {\n                this.chapter = 'chapter-1';\n                this.idx = 0;\n                ui.skip.disableInteractive().setVisible(false);\n            }\n        }\n    },\n    get chapterNum(){\n        return this.ChapterNum;\n    }\n};\n// TODO 변수\nlet myLog = {text: null};\nconst bodyConfig = {};\nconst following = {\n    Start: false,\n    Distance: 0,\n    isMoving: false,\n    get start(){\n        return this.Start;\n    },\n    set start(value){\n        this.Start = value;\n    },\n    get distance(){\n        return this.Distance;\n    },\n    set distance(value){\n        this.Distance = value;\n        if(value > 60 && this.isMoving){\n            var follow = {\n                x: (mainObject.dom.x < charMovePos.player.x) ? charMovePos.player.x - 20 : charMovePos.player.x + 20,\n                y: (mainObject.dom.y < charMovePos.player.y) ? charMovePos.player.y - 20 : charMovePos.player.y + 20\n            }\n            characterMove(mainObject.dom, follow.x, follow.y, 160);\n            this.isMoving = false;\n        }\n    }\n}\nconst mainObjConfig = {skip: 0, taskIndex: 0, characterMove: false, look: null};\nconst mainObject = {};\nconst otherObject = {};\nconst charMovePos = {player: {x: 0, y: 0}, dom: {x: 0, y:0}};\nconst line = { story: [], chapter: [], task: [] };\nconst ui = {};\nconst timer = { shaker: null };\n\n// TODO: * 프리로드\nfunction preload () {\n    // Data\n    this.load.json('line', 'data/line.json');\n\n    // UI\n    this.load.image('map1', 'image/map-1.png');\n    this.load.image('map2', 'image/map-2.png');\n    this.load.spritesheet('ui-go-down', 'image/ui-go-down.png', { frameWidth: 37, frameHeight: 30, endFrame: 1 });\n    // maps\n    this.load.image('talkbox', 'image/talkbox.png');\n\n    // character animation\n    this.load.spritesheet('stand', 'image/stand.png', { frameWidth: 32, frameHeight: 32, endFrame: 1 });\n    this.load.spritesheet('run', 'image/run.png', { frameWidth: 32, frameHeight: 32, endFrame: 3 });\n    this.load.spritesheet('seek', 'image/seek.png', { frameWidth: 32, frameHeight: 32, endFrame: 1 });\n\n    this.load.spritesheet('dom-idle', 'image/dom-stand.png', { frameWidth: 16, frameHeight: 16, endFrame: 1 });\n    this.load.spritesheet('dom-run', 'image/dom-run.png', { frameWidth: 16, frameHeight: 16, endFrame: 1 });\n\n    this.load.spritesheet('cowboy', 'image/cowboy-stand.png', { frameWidth: 32, frameHeight: 32, endFrame: 1 });\n\n    // another animation\n    this.load.spritesheet('blink', 'image/blink.png', { frameWidth: 16, frameHeight: 16, endFrame: 1 });\n\n    // plugins\n    var url_nine = 'https://raw.githubusercontent.com/rexrainbow/phaser3-rex-notes/master/dist/rexninepatchplugin.min.js';\n    this.load.plugin('rexninepatchplugin', url_nine, true);\n}\nfunction create () {\n    gameStatus.chapter = 'main';\n    gameStatus.idx = 0;\n\n    // TODO: 로그 및 디버그\n    const LogContainer = this.add.container(0, 0).setVisible(false);\n    myLog = this.add.text(6, 2, 'main-0', fontConfig).setFontSize(16);\n    const myLogBox = this.add.rectangle(display.centerW, 8, display.width, 24, 0x333333, 1);\n    LogContainer.add([myLogBox, myLog]);\n    this.physics.world.drawDebug = false;\n    this.input.keyboard.addKey('TAB').on('down', function(event) {\n        LogContainer.setVisible(true);\n        game.scene.scenes[0].physics.world.drawDebug = true;\n    }).on('up', function(event) {\n        LogContainer.setVisible(false);\n        game.config.physics.arcade.drawDebug = true;\n        game.scene.scenes[0].physics.world.drawDebug = false;\n        game.scene.scenes[0].physics.world.debugGraphic.clear();\n    });\n    this.input.keyboard.addKey(49).on('down', function(event) {\n        mainObjConfig.skip = 1;\n        console.log('SKIP TO' ,1);\n    })\n    this.input.keyboard.addKey(50).on('down', function(event) {\n        mainObjConfig.skip = 2;\n        console.log('SKIP TO' ,2);\n    })\n    // 키코드 디버그 window.addEventListener(\"keydown\", function (event) { console.log(event); })\n\n    // TODO 터치 포인터 위치 리턴\n    this.input.on('pointerup', function (pointer)\n    {\n        if(mainObjConfig.characterMove === true) {\n            characterMove(mainObject.player, pointer.x, pointer.y, 160);\n            if(following.start) following.isMoving = true;\n        }\n    }, this);\n\n    // TODO: JSON LINES TO ARRAY\n    let lineJson = this.cache.json.get('line');\n    for (let l = 0; l < lineJson.chapter.length; l++) {\n        line.chapter.push(lineJson.chapter[l]);\n    }\n    for (let c = 0; c < lineJson.task.length; c++) {\n        line.task.push(lineJson.task[c]);\n    }\n    // line Json 첫번째 배열: 챕터별 라인, 두번째 배열: 라인 당 개별 대사\n    line.story = lineJson.line.story;\n    console.log(line);\n\n    ui.startgame = this.add.text(0, 0, 'SHADE OF MYZY\\nSTART', fontConfig).setAlign('center');\n    InitObject(ui.startgame, display.centerW, display.centerH, 0.5, false);\n\n    // TODO: 스토리 시작 메인 텍스트 설정\n    ui.mainText = this.add.text(0, 0, line.story[0][0], fontConfig).setVisible(false).setAlign('center');\n    InitObject(ui.mainText, display.centerW, display.centerH, 0.5,true);\n\n    // TODO: 전체화면 스킵 오브젝트\n    ui.skip = this.add.rectangle(display.centerW, display.centerH, display.width, display.height, 0x00ff00, 0).setVisible(true);\n    ui.skip.setInteractive().setVisible(true);\n    ui.skip.on('pointerup', function () {\n        if(gameStatus.chapter === 'main'){\n            if(mainObjConfig.skip !== 0){\n                mainObjConfig.isSkipped = true;\n                gameStatus.chapter = 'chapter-' + mainObjConfig.skip.toString();\n                gameStatus.idx = 0;\n                ui.skip.disableInteractive().setVisible(false);\n                ui.startgame.setVisible(false);\n                this.setVisible(false);\n                return;\n            }\n            this.setVisible(false);\n            game.scene.scenes[0].tweens.add({\n                targets: ui.startgame,\n                alpha: 0,\n                duration: 1200,\n                onComplete: () => {\n                    gameStatus.chapter = 'story';\n                    this.setVisible(true);\n                }\n            });\n            return;\n        }\n        gameStatus.idx++;\n        ui.mainText.text = line.story[0][gameStatus.idx];\n        ShakeObject(ui.mainText, 20, 20, 240);\n    });\n    // TODO: 챕터 타이틀 텍스트 설정\n    ui.chapterText = this.add.text(0, 0, line.chapter[0], fontConfig).setVisible(false).setAlign('center');\n    InitObject(ui.chapterText, display.centerW, display.centerH, 0.5,true);\n\n    // TODO: 메인 대화창 설정\n    ui.talkBox = this.add.container(display.centerW, display.centerH + 140).setVisible(false);\n    ui.talkText = this.add.text(-display.centerW + 40, 32, '', fontConfig).setAlign('left').setFontSize(16).setLineSpacing(8);\n    ui.talkBackground = this.add.rexNinePatch({\n        x: 0, y: 0,\n        width: display.width - 20, height: 180,\n        key: 'talkbox',\n        columns: [16, undefined, 16],\n        rows: [16, undefined, 16],\n    }).setOrigin(0.5, 0).setInteractive();\n    ui.talkBox.add([ui.talkBackground, ui.talkText]);\n    ui.talkBackground.on('pointerup', function () {\n        talk();\n    });\n    function talk() {\n        if(ui.talkBox.visible === false) ui.talkBox.setVisible(true);\n        if(ui.taskBox.visible === true) ui.taskBox.setVisible(false);\n        game.scene.scenes[0].time.removeAllEvents();\n        if(line.story[gameStatus.chapterNum].length - 1 > gameStatus.idx) {\n            gameStatus.idx++;\n            if(line.story[1][gameStatus.idx] === 'close'){\n                talkClosed();\n                mainObjConfig.taskIndex++;\n            }\n            if(gameStatus.idx === 2) {\n                game.scene.scenes[0].tweens.killTweensOf(mainObject.player);\n                game.scene.scenes[0].tweens.add({\n                    targets: mainObject.player,\n                    alpha: 0.2,\n                    duration: 3200\n                });\n            }\n            else if(gameStatus.idx === 3) {\n                game.scene.scenes[0].tweens.killTweensOf(mainObject.player);\n                game.scene.scenes[0].tweens.add({\n                    targets: mainObject.player,\n                    alpha: 1,\n                    duration: 400\n                });\n            }\n            else if(gameStatus.idx === 4) mainObject.player.play('seek');\n            else if(gameStatus.idx === 5) mainObject.player.play('stand');\n            else if(gameStatus.idx === 19) {\n                ui.godown.setVisible(true).play('godown');\n                bodyConfig.godown.active = true;\n            }\n        }\n        else {\n            console.log('null index line');\n        }\n        ui.talkText.text = '';\n        typewriteText(ui.talkText, line.story[1][gameStatus.idx], 60);\n    }\n\n    // TODO: 미션 텍스트\n    ui.taskBox = this.add.container(display.centerW, 16 + 24).setVisible(false);\n    ui.taskText = this.add.text(0, 0, line.task[mainObjConfig.taskIndex], fontConfig).setOrigin(0.5).setFontSize(16);\n    ui.taskBackground = this.add.rectangle(0, 0, display.width, 32, 0x000000).setOrigin(0.5);\n    ui.taskBox.add([ui.taskBackground, ui.taskText]);\n    // TODO 기타 UI 오브젝트 그룹\n    ui.others = this.add.container(0, 0);\n    ui.black = this.add.rectangle(display.centerW, display.centerH, display.width, display.height, 0x000000).setVisible(false).setAlpha(0);\n    ui.godown = this.physics.add.sprite(display.centerW, display.height - 20, 'ui-go-down').setOrigin(0.5, 1)\n        .setScale(2).setVisible(false).setSize(display.width, 30);\n    ui.blink = this.physics.add.sprite(display.centerW + 80, 180, 'blink').setOrigin(0.5, 1)\n        .setScale(2).setVisible(false);\n    ui.others.add([ui.godown, ui.blink, ui.black]);\n\n    // TODO: 캐릭터 생성\n    setAnims();\n    mainObject.group = this.add.container();\n    mainObject.player = this.physics.add.sprite(display.centerW, 180, 'stand')\n        .play('stand').setOrigin(0.5, 1).setScale(2).setVisible(false);\n\n    mainObject.dom = this.physics.add.sprite(display.centerW + 80, 180, 'dom-idle')\n        .play('dom-stand').setOrigin(0.5, 1).setScale(2).setVisible(false);\n\n    mainObject.cowboy = this.physics.add.sprite(display.centerW + 60, 120, 'cowboy')\n        .play('cowboy-stand').setOrigin(0.5, 1).setScale(2).setVisible(false);\n\n    ui.bg = [];\n    ui.bg[1] = this.add.sprite(display.centerW, display.centerH, 'map1').setScale(2).setVisible(false);\n    ui.bg[2] = this.add.sprite(display.centerW, display.centerH, 'map2').setScale(2).setVisible(false);\n\n    // TODO: 기타 효과 오브젝트 생성\n\n    bodyConfig.dom = this.physics.add.overlap(mainObject.player, mainObject.dom, onCol, null, this);\n    bodyConfig.godown = this.physics.add.overlap(mainObject.player, ui.godown, onCol, null, this);\n    bodyConfig.blink = this.physics.add.overlap(mainObject.player, ui.blink, onCol, null, this);\n\n    bodyConfig.blink.active = false;\n    bodyConfig.dom.active = false;\n    bodyConfig.godown.active = false;\n\n\n    mainObject.group.add([mainObject.player, mainObject.dom, mainObject.cowboy]);\n\n    // TODO: 물리 설정\n    function onCol(player, obj) {\n        if(obj === ui.blink){\n            bodyConfig.blink.active = false\n            var movePos = {x: mainObject.dom.x - 40, y: mainObject.dom.y};\n            characterMove(player, movePos.x, movePos.y, 160);\n            mainObjConfig.characterMove = false;\n            obj.setVisible(false);\n            mainObject.dom.setVisible(true);\n            looking(mainObject.dom, movePos, false);\n            mainObjConfig.look = mainObject.dom;\n            talk();\n        }\n        else if(obj === mainObject.dom){\n            characterMove(mainObject.player, obj.x + 40, obj.y, 160);\n            mainObjConfig.look = mainObject.dom;\n            bodyConfig.dom.active = false;\n            mainObjConfig.characterMove = false;\n            looking(mainObject.dom, charMovePos.player, false);\n            talk();\n        }\n        else if(obj === ui.godown){\n            obj.setVisible(false);\n            following.isMoving = true;\n            characterMove(mainObject.player, display.centerW, display.height + 120, 160);\n            bodyConfig.godown.active = false;\n            mainObjConfig.characterMove = false;\n            toNextChapter();\n        }\n    }\n\n    // 레이어 정리\n    mainObject.layer = this.add.layer();\n    mainObject.layer.add(ui.bg[1]);\n    mainObject.layer.add(ui.bg[2]);\n    mainObject.layer.add(mainObject.group);\n    mainObject.layer.add(ui.others);\n    mainObject.layer.add(ui.talkBox);\n    mainObject.layer.add(ui.taskBox);\n    mainObject.layer.add(ui.skip);\n    mainObject.layer.add(LogContainer);\n}\n\nfunction setAnims() {\n    // TODO: 애니메이션 추가\n    var scene = game.scene.scenes[0];\n    scene.anims.create({\n        key: 'stand',\n        frames: scene.anims.generateFrameNumbers('stand', { start: 0, end: 1, first: 0 }),\n        frameRate: 4,\n        repeat: -1\n    });\n    scene.anims.create({\n        key: 'run',\n        frames: scene.anims.generateFrameNumbers('run', { start: 0, end: 3, first: 0 }),\n        frameRate: 8,\n        repeat: -1\n    });\n    scene.anims.create({\n        key: 'seek',\n        frames: scene.anims.generateFrameNumbers('seek', { start: 0, end: 1, first: 0 }),\n        frameRate: 2,\n        repeat: -1\n    });\n    scene.anims.create({\n        key: 'dom-stand',\n        frames: scene.anims.generateFrameNumbers('dom-idle', { start: 0, end: 1, first: 0 }),\n        frameRate: 4,\n        repeat: -1\n    });\n    scene.anims.create({\n        key: 'dom-run',\n        frames: scene.anims.generateFrameNumbers('dom-run', { start: 0, end: 1, first: 0 }),\n        frameRate: 8,\n        repeat: -1\n    });\n    scene.anims.create({\n        key: 'cowboy-stand',\n        frames: scene.anims.generateFrameNumbers('cowboy', { start: 0, end: 1, first: 0 }),\n        frameRate: 4,\n        repeat: -1\n    });\n    scene.anims.create({\n        key: 'blink',\n        frames: scene.anims.generateFrameNumbers('blink', { start: 0, end: 1, first: 0 }),\n        frameRate: 2,\n        repeat: -1\n    });\n    scene.anims.create({\n        key: 'godown',\n        frames: scene.anims.generateFrameNumbers('ui-go-down', { start: 0, end: 1, first: 0 }),\n        frameRate: 2,\n        repeat: -1\n    });\n}\nfunction story() {\n    // TODO: 스토리 시작\n    console.log('스토리 시작');\n    ui.mainText.setVisible(true);\n    ShakeObject(ui.mainText, 20, 20, 240);\n}\nfunction toNextChapter(){\n    var next = parseInt(gameStatus.chapterNum) + 1;\n    ui.talkBox.setVisible(false);\n    ui.taskBox.setVisible(false);\n    ui.black.setVisible(true);\n    game.scene.scenes[0].tweens.add({\n        targets: ui.black,\n        alpha: 1,\n        duration: 1400,\n        onComplete: function () {\n            gameStatus.chapter = 'chapter-' + next;\n            gameStatus.idx = 0;\n            ui.bg[next - 1].setVisible(false);\n            ui.black.setVisible(false);\n        }\n    });\n}\nfunction chapter(chapterNum) {\n    // TODO: 챕터 시작\n    console.log('챕터', chapterNum, '시작');\n    ui.mainText.setVisible(false);\n    ui.chapterText.setVisible(true);\n    ui.chapterText.alpha = 0;\n    // 챕터 타이틀 애니메이션\n    if(mainObjConfig.skip !== 0){\n        mainObjConfig.skip = 0;\n        startChapter();\n        return;\n    }\n    ui.chapterText.text = line.chapter[gameStatus.chapterNum];\n    game.scene.scenes[0].tweens.add({\n        targets: ui.chapterText,\n        alpha: 1,\n        duration: 2400,\n        yoyo: true,\n        ease: Phaser.Math.Easing.Elastic.InOut,\n        onComplete: startChapter\n    });\n}\n// 챕터 시작\nfunction startChapter() {\n    var chapNum = gameStatus.chapterNum;\n    ui.bg[chapNum].setVisible(true);\n    if(chapNum === 1){\n        ui.talkBox.setVisible(true);\n        mainObject.player.setVisible(true).setAlpha(0);\n        game.scene.scenes[0].tweens.add({\n            targets: mainObject.player,\n            alpha: 1,\n            duration: 3200,\n            ease: 'linear'\n        });\n        typewriteText(ui.talkText, line.story[1][0], 100);\n    }\n    else if(chapNum === 2){\n        if(mainObjConfig.isSkipped){\n            following.start = true;\n            mainObject.player.setVisible(true);\n            mainObject.dom.setVisible(true);\n            mainObject.dom.x = display.centerW - 20;\n        }\n        mainObject.player.y = -120;\n        mainObject.dom.y = -120;\n        mainObject.cowboy.setVisible(true);\n        following.isMoving = true;\n        characterMove(mainObject.player, display.centerW, 100, 160);\n    }\n    \n}\n// TODO: 대화 종료\nfunction talkClosed() {\n    // 공통 작업\n    setTimeout(() => mainObjConfig.characterMove = true, 60);\n    ui.talkBox.setVisible(false);\n    ui.taskBox.setVisible(true);\n    ui.taskText.text = line.task[mainObjConfig.taskIndex];\n\n    if(gameStatus.chapterNum === 1){\n        if(gameStatus.idx < 7){\n            setTimeout(function () {\n                bodyConfig.blink.active = true;\n                ui.blink.setVisible(true).play('blink');\n            }, 2400);\n        }\n        else if(gameStatus.idx === 12){\n            characterMove(mainObject.dom, display.centerW - 10, display.centerH + 80, 160);\n        }\n        else if(gameStatus.idx === 19){\n            following.start = true;\n        }\n    }\n\n}\nfunction characterMove(character, x, y, speed) {\n    var name;\n    if(character === mainObject.player) {\n        name = 'player';\n        if(character.anims.currentAnim.key !== 'run') character.play('run');\n    }\n    else if(character === mainObject.dom) {\n        name = 'dom';\n        if(character.anims.currentAnim.key !== 'dom-run') character.play('dom-run');\n    }\n    charMovePos[name].x = x;\n    charMovePos[name].y = y;\n\n    mainObjConfig.look = null;\n    character.setFlipX(x < character.x);\n\n\n    game.scene.scenes[0].physics.moveToObject(character, {x: x, y: y}, speed);\n}\nfunction looking(character, target, each) {\n    character.setFlipX(character.x > target.x);\n    if(each) target.setFlipX(target.x > character.x);\n}\nfunction update () {\n    // TODO 업데이트\n    // 터치 포지션 근접시 리셋\n    let dis = {\n        player: Phaser.Math.Distance.Between(mainObject.player.x, mainObject.player.y, charMovePos.player.x, charMovePos.player.y),\n        dom: Phaser.Math.Distance.Between(mainObject.dom.x, mainObject.dom.y, charMovePos.dom.x, charMovePos.dom.y)\n    };\n    if (mainObject.player.body.speed > 0)\n    {\n        if(following.start) {\n            var gap = dis.player < Phaser.Math.Distance.Between(mainObject.dom.x, mainObject.dom.y, charMovePos.player.x, charMovePos.player.y);\n            if(gap){\n                following.distance = Phaser.Math.Distance.Between\n                (mainObject.player.x, mainObject.player.y, mainObject.dom.x, mainObject.dom.y);\n            }\n        }\n        // 캐릭터 레이어 변경\n        mainObject.group.list.sort(function(a, b) {\n            return a.y > b.y ? 1 : -1;\n        });\n\n        // 정지\n        if (dis.player < 4)\n        {\n            mainObject.player.body.reset(charMovePos.player.x, charMovePos.player.y);\n            mainObject.player.play('stand');\n            if(mainObjConfig.look !== null){\n                looking(mainObject.player, mainObjConfig.look, false);\n            }\n        }\n    }\n    if (mainObject.dom.body.speed > 0)\n    {\n        // 캐릭터 레이어 변경\n        mainObject.group.list.sort(function(a, b) {\n            return a.y > b.y ? 1 : -1;\n        });\n\n        // 정지\n        if (dis.dom < 4)\n        {\n            mainObject.dom.body.reset(charMovePos.dom.x, charMovePos.dom.y);\n            mainObject.dom.play('dom-stand');\n            if(!following.start) bodyConfig.dom.active = true;\n            else following.Move = false;\n        }\n    }\n}\nfunction InitObject(obj, x, y, origin, setInteractive) {\n    obj.x = x;\n    obj.y = y;\n    obj.setOrigin(origin);\n    if(setInteractive) obj.setInteractive();\n}\nfunction RandomPlusMinus() {\n    return (Math.random() > 0.5) ? 1 : -1;\n}\nfunction RandomizePos(obj, x, y, min, max) {\n    obj.x = x + min + Math.random() * max * RandomPlusMinus();\n    obj.y = y + min + Math.random() * max * RandomPlusMinus();\n}\nfunction ShakeObject(obj, max, speed, time) {\n    if(timer.shaker !== null) return;\n    const x = obj.x;\n    const y = obj.y;\n    setTimeout(()=> {\n        clearTimeout(timer.shaker);\n        timer.shaker = null;\n        obj.x = x;\n        obj.y = y;\n    }, time);\n    repeat();\n    function repeat() {\n        RandomizePos(obj, x, y, 0, max);\n        timer.shaker = setTimeout(repeat, speed);\n    }\n}\nfunction typewriteText(object, txt, speed) {\n    const length = txt.length\n    let i = 0\n    game.scene.scenes[0].time.addEvent({\n        callback: () => {\n            object.text += txt[i]\n            ++i\n        },\n        repeat: length - 1,\n        delay: speed\n    })\n}"],"names":[],"sourceRoot":""}