{"version":3,"file":"app.js","mappings":";;;;;AAAA;AACA,qEAAqE,kBAAkB,gBAAgB,yBAAyB;AAChI;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,iBAAiB;AACjB;AACA,mDAAmD;AACnD;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA,qBAAqB,SAAS,WAAW,QAAQ;AACjD,eAAe;AACf;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,gDAAgD;AAClG,kEAAkE,8CAA8C;AAChH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,8CAA8C;AACxG;AACA,+DAA+D,8CAA8C;AAC7G,4DAA4D,8CAA8C;AAC1G;AACA,gEAAgE,8CAA8C;AAC9G;AACA;AACA,wDAAwD,8CAA8C;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gGAAgG,gBAAgB;AAChH;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,wBAAwB,+BAA+B;AACvD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL,qEAAqE,qBAAqB;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,+CAA+C;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,oBAAoB,6BAA6B;AACjD;AACA;AACA,oBAAoB,0BAA0B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrzF;AACA;AACA,KAAK;AACL;AACA;AACA,6DAA6D,4BAA4B;AACzF;AACA;AACA,KAAK;AACL;AACA;AACA,6DAA6D,4BAA4B;AACzF;AACA;AACA,KAAK;AACL;AACA;AACA,+DAA+D,4BAA4B;AAC3F;AACA;AACA,KAAK;AACL;AACA;AACA,8DAA8D,4BAA4B;AAC1F;AACA;AACA,KAAK;AACL;AACA;AACA,6DAA6D,4BAA4B;AACzF;AACA;AACA,KAAK;AACL;AACA;AACA,4DAA4D,4BAA4B;AACxF;AACA;AACA,KAAK;AACL;AACA;AACA,iEAAiE,4BAA4B;AAC7F;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,WAAW;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL,C","sources":["webpack://gajwa-playground/./public/project.js"],"sourcesContent":["// const FontFaceObserver = require('fontfaceobserver');\r\nconsole.log(\"%c@ MYZY.SPACE 2021 POWERED BY MYZY_\", \"color: #00ff00; font-weight: 900; font-size: 1em; background-color: black; padding: 1rem\");\r\n\r\nlet font = new FontFaceObserver('dgm');\r\nfont.load().then(function () {\r\n    //console.log('font' ,font.family , 'loaded');\r\n});\r\n\r\nconst display = {width : 360, height: 680, centerW : 180, centerH: 340 };\r\nfunction device(){\r\n    let varUA = navigator.userAgent.toLowerCase(); //userAgent 값 얻기\r\n\r\n    if ( varUA.indexOf('android') > -1) {\r\n        return \"안드로이드\";\r\n    } else if ( varUA.indexOf(\"iphone\") > -1||varUA.indexOf(\"ipad\") > -1||varUA.indexOf(\"ipod\") > -1 ) {\r\n        return \"아이폰\";\r\n    } else if ( varUA.indexOf(\"mac\") > -1) {\r\n        return \"맥\";\r\n    } else if ( varUA.indexOf(\"windows\") > -1) {\r\n        return \"컴퓨터\";\r\n    } else {\r\n        return \"기계\";\r\n    }\r\n}\r\n\r\nconst config = {\r\n    type: Phaser.AUTO,\r\n    width: display.width,\r\n    height: display.height,\r\n    physics: {\r\n        default: 'arcade',\r\n        arcade: {\r\n            debug: true\r\n        }\r\n    },\r\n    scene: {\r\n        preload: preload,\r\n        create: create,\r\n        update: update\r\n    },\r\n    parent: 'canvas',\r\n    pixelArt: true,\r\n    plugins: {\r\n        scene: [\r\n            {\r\n                key: \"PhaserNavMeshPlugin\", // Key to store the plugin class under in cache\r\n                plugin: PhaserNavMeshPlugin, // Class that constructs plugins\r\n                mapping: \"navMeshPlugin\", // Property mapping to use for the scene, e.g. this.navMeshPlugin\r\n                start: true\r\n            },\r\n        ]\r\n    }\r\n};\r\nconst fontConfig = {font: '32px \"dgm\"', color: '#fff'};\r\nconst game = new Phaser.Game(config);\r\n// TODO: 게임 상태 매니저\r\nlet gameStatus = {\r\n    Chapter: 'load',\r\n    ChapterNum: 0,\r\n    Index: 0,\r\n    get chapter(){\r\n        return this.Chapter;\r\n    },\r\n    set chapter(value) {\r\n        this.Chapter = value;\r\n        if(value === 'story') story();\r\n        else if(value.split(\"-\")[0] === 'chapter') {\r\n            this.ChapterNum = Number(value.split(\"-\")[1]);\r\n            chapter(this.ChapterNum);\r\n        }\r\n        myLog.text = this.Chapter + \"-\" + this.Index;\r\n    },\r\n    get idx(){\r\n        return this.Index;\r\n    },\r\n    set idx(value) {\r\n        this.Index = value;\r\n        myLog.text = this.Chapter + \"-\" + this.Index;\r\n        if(this.chapter === 'story'){\r\n            if(this.idx >= line.story[0].length) {\r\n                this.chapter = 'chapter-1';\r\n                this.idx = 0;\r\n                ui.skip.disableInteractive().setVisible(false);\r\n            }\r\n        }\r\n    },\r\n    get chapterNum(){\r\n        return this.ChapterNum;\r\n    }\r\n};\r\n// TODO 변수\r\nlet myLog = {text: null};\r\nconst bodyConfig = {};\r\nconst following = {\r\n    Start: false,\r\n    Distance: 0,\r\n    isMoving: false,\r\n    get start(){\r\n        return this.Start;\r\n    },\r\n    set start(value){\r\n        this.Start = value;\r\n    },\r\n    get distance(){\r\n        return this.Distance;\r\n    },\r\n    set distance(value){\r\n        this.Distance = value;\r\n        if(value > 60 && this.isMoving){\r\n            var follow = {\r\n                x: (mainObject.dom.x < charMovePos.player.x) ? charMovePos.player.x - 20 : charMovePos.player.x + 20,\r\n                y: (mainObject.dom.y < charMovePos.player.y) ? charMovePos.player.y - 20 : charMovePos.player.y + 20\r\n            }\r\n            characterMove(mainObject.dom, follow.x, follow.y, 160);\r\n            this.isMoving = false;\r\n        }\r\n    }\r\n}\r\nconst mainObjConfig = {skip: 0, taskIndex: 0, characterMove: false, look: null};\r\nconst mainObject = {};\r\nconst otherObject = {};\r\nconst charMovePos = {player: {x: 0, y: 0}, dom: {x: 0, y:0}};\r\nconst line = { story: [], chapter: [], task: [] };\r\nconst ui = {};\r\nconst timer = { shaker: null };\r\n\r\n// TODO: * 프리로드\r\nfunction preload () {\r\n    // Data\r\n    this.load.json('line', 'data/line.json');\r\n\r\n    // UI\r\n    this.load.spritesheet('bg', 'image/bg.png', { frameWidth: 180, frameHeight: 340, endFrame: 1 });\r\n    this.load.spritesheet('ui-go-down', 'image/ui-go-down.png', { frameWidth: 37, frameHeight: 30, endFrame: 1 });\r\n    // maps\r\n    this.load.image('talkbox', 'image/talkbox.png');\r\n    this.load.image('building', 'image/building.png');\r\n\r\n    // tile map\r\n    this.load.tilemapTiledJSON(\"map\", \"map/map.json\");\r\n    this.load.image(\"tileset\", \"map/tileset.png\");\r\n\r\n    // character animation\r\n    this.load.spritesheet('player', 'image/player.png', { frameWidth: 32, frameHeight: 32, endFrame: 8 });\r\n\r\n    this.load.spritesheet('dom-idle', 'image/dom-stand.png', { frameWidth: 16, frameHeight: 16, endFrame: 1 });\r\n    this.load.spritesheet('dom-run', 'image/dom-run.png', { frameWidth: 16, frameHeight: 16, endFrame: 1 });\r\n\r\n    this.load.spritesheet('cowboy', 'image/cowboy-stand.png', { frameWidth: 32, frameHeight: 32, endFrame: 1 });\r\n\r\n    // another animation\r\n    this.load.spritesheet('blink', 'image/blink.png', { frameWidth: 16, frameHeight: 16, endFrame: 1 });\r\n\r\n    // plugins\r\n    this.load.plugin('rexninepatchplugin', 'rexninepatchplugin.min.js', true);\r\n\r\n}\r\nfunction pathfinder() {\r\n\r\n}\r\n\r\nfunction create () {\r\n    const graphics = this.add.graphics().setVisible(false);\r\n    mainObject.tile = this.add.container();\r\n    mainObject.tilemap = this.add.tilemap(\"map\");\r\n    const tileset = mainObject.tilemap.addTilesetImage(\"colortile\", \"tileset\");\r\n    const wallLayer = mainObject.tilemap.createLayer(\"walls\", tileset).setCollisionByProperty({ collides: true }).setVisible(false);\r\n    const navMesh = this.navMeshPlugin.buildMeshFromTilemap(\"mesh\", mainObject.tilemap, [wallLayer]);\r\n    mainObject.tile.add([wallLayer, graphics])\r\n\r\n    this.input.on(\"pointerdown\", pointer => {\r\n        graphics.clear();\r\n        const p2 = { x: pointer.x, y: pointer.y };\r\n        mainObjConfig.path = navMesh.findPath(mainObject.player, p2);\r\n        if(mainObjConfig.path === null) {\r\n            return;\r\n        }\r\n        var line = new Phaser.Curves.Path(mainObject.player.x, mainObject.player.y);\r\n        for (var i = 0; i < mainObjConfig.path.length; i++)\r\n        {\r\n            line.lineTo(mainObjConfig.path[i].x, mainObjConfig.path[i].y);\r\n        }\r\n        graphics.lineStyle(1, 0xff0000, 1);\r\n        line.draw(graphics);\r\n    });\r\n\r\n    gameStatus.chapter = 'main';\r\n    gameStatus.idx = 0;\r\n\r\n    // TODO: 로그 및 디버그\r\n    mainObjConfig.graphics = this.add.graphics();\r\n    const LogContainer = this.add.container(0, 0).setVisible(false);\r\n    myLog = this.add.text(6, 2, 'main-0', fontConfig).setFontSize(16);\r\n    const myLogBox = this.add.rectangle(display.centerW, 8, display.width, 24, 0xff0000, 1);\r\n    LogContainer.add([myLogBox, myLog]);\r\n    this.physics.world.drawDebug = false;\r\n    this.input.keyboard.addKey('TAB').on('down', function(event) {\r\n        if(!LogContainer.visible){\r\n            LogContainer.setVisible(true);\r\n            game.scene.scenes[0].physics.world.drawDebug = true;\r\n        }\r\n        else {\r\n            LogContainer.setVisible(false);\r\n            game.config.physics.arcade.drawDebug = true;\r\n            game.scene.scenes[0].physics.world.drawDebug = false;\r\n            game.scene.scenes[0].physics.world.debugGraphic.clear();\r\n        }\r\n    });\r\n    this.input.keyboard.addKey('Q').on('down', function(event) {\r\n        mainObjConfig.characterMove = !mainObjConfig.characterMove;\r\n    })\r\n    this.input.keyboard.addKey(49).on('down', function(event) {\r\n        mainObjConfig.skip = 1;\r\n        console.log('SKIP TO' ,1);\r\n    })\r\n    this.input.keyboard.addKey(50).on('down', function(event) {\r\n        mainObjConfig.skip = 2;\r\n        console.log('SKIP TO' ,2);\r\n    })\r\n    // 키코드 디버그 window.addEventListener(\"keydown\", function (event) { console.log(event); })\r\n\r\n    // TODO 패스파인더 생성\r\n\r\n\r\n    // TODO 터치 포인터 위치 리턴\r\n    this.input.on('pointerup', function (pointer)\r\n    {\r\n        if(mainObjConfig.characterMove === true) {\r\n            if(mainObjConfig.path === null){\r\n                mainObjConfig.pathCount = 0;\r\n                mainObjConfig.path = [{x: mainObject.player.x, y: mainObject.player.y}];\r\n            }\r\n            else {\r\n                mainObjConfig.pathCount = 1;\r\n            }\r\n            characterMove(mainObject.player, mainObjConfig.path[mainObjConfig.pathCount].x, mainObjConfig.path[mainObjConfig.pathCount].y, 160);\r\n            if(following.start) following.isMoving = true;\r\n        }\r\n    }, this);\r\n\r\n    // TODO: JSON LINES TO ARRAY\r\n    let lineJson = this.cache.json.get('line');\r\n    for (let l = 0; l < lineJson.chapter.length; l++) {\r\n        line.chapter.push(lineJson.chapter[l]);\r\n    }\r\n    for (let c = 0; c < lineJson.task.length; c++) {\r\n        line.task.push(lineJson.task[c]);\r\n    }\r\n    // line Json 첫번째 배열: 챕터별 라인, 두번째 배열: 라인 당 개별 대사\r\n    line.story = lineJson.line.story;\r\n    console.log(line);\r\n\r\n    ui.startgame = this.add.text(0, 0, 'SHADE OF MYZY\\nSTART', fontConfig).setAlign('center');\r\n    InitObject(ui.startgame, display.centerW, display.centerH, 0.5, false);\r\n\r\n    // TODO: 스토리 시작 메인 텍스트 설정\r\n    ui.mainText = this.add.text(0, 0, line.story[0][0], fontConfig).setVisible(false).setAlign('center');\r\n    InitObject(ui.mainText, display.centerW, display.centerH, 0.5,true);\r\n\r\n    // TODO: 전체화면 스킵 오브젝트\r\n    ui.skip = this.add.rectangle(display.centerW, display.centerH, display.width, display.height, 0x00ff00, 0).setVisible(true);\r\n    ui.skip.setInteractive().setVisible(true);\r\n    ui.skip.on('pointerup', function () {\r\n        if(gameStatus.chapter === 'main'){\r\n            if(mainObjConfig.skip !== 0){\r\n                mainObjConfig.isSkipped = true;\r\n                gameStatus.chapter = 'chapter-' + mainObjConfig.skip.toString();\r\n                gameStatus.idx = 0;\r\n                ui.skip.disableInteractive().setVisible(false);\r\n                ui.startgame.setVisible(false);\r\n                this.setVisible(false);\r\n                return;\r\n            }\r\n            this.setVisible(false);\r\n            game.scene.scenes[0].tweens.add({\r\n                targets: ui.startgame,\r\n                alpha: 0,\r\n                duration: 1200,\r\n                onComplete: () => {\r\n                    gameStatus.chapter = 'story';\r\n                    this.setVisible(true);\r\n                }\r\n            });\r\n            return;\r\n        }\r\n        gameStatus.idx++;\r\n        ui.mainText.text = line.story[0][gameStatus.idx];\r\n        ShakeObject(ui.mainText, 20, 20, 240);\r\n    });\r\n    // TODO: 챕터 타이틀 텍스트 설정\r\n    ui.chapterText = this.add.text(0, 0, line.chapter[0], fontConfig).setVisible(false).setAlign('center');\r\n    InitObject(ui.chapterText, display.centerW, display.centerH, 0.5,true);\r\n\r\n    // TODO: 메인 대화창 설정\r\n    ui.talkBox = this.add.container(display.centerW, display.centerH + 140).setVisible(false);\r\n    ui.talkText = this.add.text(-display.centerW + 40, 32, '', fontConfig).setAlign('left').setFontSize(16).setLineSpacing(8);\r\n    ui.talkBackground = this.add.rexNinePatch({\r\n        x: 0, y: 0,\r\n        width: display.width - 20, height: 180,\r\n        key: 'talkbox',\r\n        columns: [16, undefined, 16],\r\n        rows: [16, undefined, 16],\r\n    }).setOrigin(0.5, 0).setInteractive();\r\n    ui.talkBox.add([ui.talkBackground, ui.talkText]);\r\n    ui.talkBackground.on('pointerup', function () {\r\n        talk();\r\n    });\r\n    function talk() {\r\n        var chapter = gameStatus.chapterNum;\r\n        if(ui.talkBox.visible === false) ui.talkBox.setVisible(true);\r\n        if(ui.taskBox.visible === true) ui.taskBox.setVisible(false);\r\n        game.scene.scenes[0].time.removeAllEvents();\r\n        if(line.story[chapter].length - 1 > gameStatus.idx) {\r\n            gameStatus.idx++;\r\n            if(line.story[chapter][gameStatus.idx] === 'close'){\r\n                talkClosed();\r\n                mainObjConfig.taskIndex++;\r\n            }\r\n            if(chapter === 1){\r\n                if(gameStatus.idx === 2) {\r\n                    game.scene.scenes[0].tweens.killTweensOf(mainObject.player);\r\n                    game.scene.scenes[0].tweens.add({\r\n                        targets: mainObject.player,\r\n                        alpha: 0.2,\r\n                        duration: 3200\r\n                    });\r\n                }\r\n                else if(gameStatus.idx === 3) {\r\n                    game.scene.scenes[0].tweens.killTweensOf(mainObject.player);\r\n                    game.scene.scenes[0].tweens.add({\r\n                        targets: mainObject.player,\r\n                        alpha: 1,\r\n                        duration: 400\r\n                    });\r\n                }\r\n                else if(gameStatus.idx === 4) mainObject.player.play('seek');\r\n                else if(gameStatus.idx === 5) mainObject.player.play('stand');\r\n                else if(gameStatus.idx === 6){\r\n                    setTimeout(function () {\r\n                        bodyConfig.blink.active = true;\r\n                        ui.blink.setVisible(true).play('blink');\r\n                    }, 2400);\r\n                }\r\n                else if(gameStatus.idx === 12){\r\n                    characterMove(mainObject.dom, display.centerW - 10, display.centerH + 80, 160);\r\n                }\r\n                else if(gameStatus.idx === 19){\r\n                    following.start = true;\r\n                    ui.godown.setVisible(true).play('godown');\r\n                    bodyConfig.godown.active = true;\r\n                }\r\n            }\r\n            else if(chapter === 2){\r\n\r\n            }\r\n        }\r\n        else {\r\n            console.log('null index line');\r\n        }\r\n        ui.talkText.text = '';\r\n        typewriteText(ui.talkText, line.story[chapter][gameStatus.idx], 60);\r\n    }\r\n\r\n    // TODO: 미션 텍스트\r\n    ui.taskBox = this.add.container(display.centerW, 16).setVisible(false);\r\n    ui.taskText = this.add.text(0, 0, '', fontConfig).setOrigin(0.5).setFontSize(16);\r\n    ui.taskBackground = this.add.rectangle(0, 0, display.width, 32, 0x000000).setOrigin(0.5);\r\n    ui.taskBox.add([ui.taskBackground, ui.taskText]);\r\n    // TODO 기타 UI 오브젝트 그룹\r\n    ui.others = this.add.container(0, 0);\r\n    ui.black = this.add.rectangle(display.centerW, display.centerH, display.width, display.height, 0x000000).setVisible(false).setAlpha(0);\r\n    ui.godown = this.physics.add.sprite(display.centerW, display.height - 20, 'ui-go-down').setOrigin(0.5, 1)\r\n        .setScale(2).setVisible(false).setSize(display.width, 30);\r\n    ui.blink = this.physics.add.sprite(display.centerW + 80, 180, 'blink').setOrigin(0.5, 1)\r\n        .setScale(2).setVisible(false);\r\n    ui.others.add([ui.godown, ui.blink, ui.black]);\r\n\r\n\r\n    // TODO: 캐릭터 생성\r\n    setAnims();\r\n    mainObject.group = this.add.container();\r\n    mainObject.player = this.physics.add.sprite(display.centerW, 180, 'player')\r\n        .play('stand').setOrigin(0.5, 1).setScale(2).setVisible(false);\r\n\r\n    mainObject.dom = this.physics.add.sprite(display.centerW + 80, 180, 'dom-idle')\r\n        .play('dom-stand').setOrigin(0.5, 1).setScale(2).setVisible(false);\r\n\r\n    mainObject.cowboy = this.physics.add.sprite(display.centerW + 60, 160, 'cowboy')\r\n        .play('cowboy-stand').setOrigin(0.5, 1).setScale(2).setVisible(false);\r\n\r\n    ui.bg = this.add.sprite(display.centerW, display.centerH, 'bg').setScale(2).setFrame(0).setVisible(false);\r\n\r\n    // TODO 배경 오브젝트 생성\r\n    otherObject.building = this.add.sprite(display.centerW, display.centerH + 100, 'building').setOrigin(0.5, 1)\r\n        .setScale(2).setVisible(false);\r\n\r\n\r\n\r\n    // TODO: 기타 효과 오브젝트 생성\r\n    bodyConfig.dom = this.physics.add.overlap(mainObject.player, mainObject.dom, onCol, null, this);\r\n    bodyConfig.godown = this.physics.add.overlap(mainObject.player, ui.godown, onCol, null, this);\r\n    bodyConfig.blink = this.physics.add.overlap(mainObject.player, ui.blink, onCol, null, this);\r\n\r\n    bodyConfig.blink.active = false;\r\n    bodyConfig.dom.active = false;\r\n    bodyConfig.godown.active = false;\r\n\r\n\r\n    mainObject.group.add([mainObject.player, mainObject.dom, mainObject.cowboy, otherObject.building]);\r\n\r\n    // TODO 물리 설정\r\n\r\n    // TODO 콜라이더 설정\r\n    function onCol(player, obj) {\r\n        if(obj === ui.blink){\r\n            bodyConfig.blink.active = false\r\n            var movePos = {x: mainObject.dom.x - 40, y: mainObject.dom.y};\r\n            characterMove(player, movePos.x, movePos.y, 160);\r\n            mainObjConfig.characterMove = false;\r\n            obj.setVisible(false);\r\n            mainObject.dom.setVisible(true);\r\n            looking(mainObject.dom, movePos, false);\r\n            mainObjConfig.look = mainObject.dom;\r\n            talk();\r\n        }\r\n        else if(obj === mainObject.dom){\r\n            characterMove(mainObject.player, obj.x + 40, obj.y, 160);\r\n            mainObjConfig.look = mainObject.dom;\r\n            bodyConfig.dom.active = false;\r\n            mainObjConfig.characterMove = false;\r\n            looking(mainObject.dom, charMovePos.player, false);\r\n            talk();\r\n        }\r\n        else if(obj === ui.godown){\r\n            obj.setVisible(false);\r\n            following.isMoving = true;\r\n            characterMove(mainObject.player, display.centerW, display.height + 120, 160);\r\n            bodyConfig.godown.active = false;\r\n            mainObjConfig.characterMove = false;\r\n            toNextChapter();\r\n        }\r\n        else if(obj === otherObject.building){\r\n            characterMove(player, mainObject.dom.x, mainObject.dom.y, 160);\r\n        }\r\n    }\r\n\r\n    // TODO 레이어 정리\r\n    mainObject.layer = this.add.layer();\r\n    mainObject.layer.add(ui.bg);\r\n    mainObject.layer.add(mainObject.group);\r\n    mainObject.layer.add(ui.others);\r\n    mainObject.layer.add(ui.talkBox);\r\n    mainObject.layer.add(ui.taskBox);\r\n    mainObject.layer.add(ui.skip);\r\n    mainObject.layer.add(LogContainer);\r\n    mainObject.layer.add(mainObject.tile);\r\n}\r\n\r\nfunction setAnims() {\r\n    // TODO: 애니메이션 추가\r\n    var scene = game.scene.scenes[0];\r\n    scene.anims.create({\r\n        key: 'stand',\r\n        frames: scene.anims.generateFrameNumbers('player', { start: 0, end: 1, first: 0 }),\r\n        frameRate: 4,\r\n        repeat: -1\r\n    });\r\n    scene.anims.create({\r\n        key: 'run',\r\n        frames: scene.anims.generateFrameNumbers('player', { start: 2, end: 5, first: 0 }),\r\n        frameRate: 8,\r\n        repeat: -1\r\n    });\r\n    scene.anims.create({\r\n        key: 'seek',\r\n        frames: scene.anims.generateFrameNumbers('player', { start: 6, end: 7, first: 0 }),\r\n        frameRate: 2,\r\n        repeat: -1\r\n    });\r\n    scene.anims.create({\r\n        key: 'dom-stand',\r\n        frames: scene.anims.generateFrameNumbers('dom-idle', { start: 0, end: 1, first: 0 }),\r\n        frameRate: 4,\r\n        repeat: -1\r\n    });\r\n    scene.anims.create({\r\n        key: 'dom-run',\r\n        frames: scene.anims.generateFrameNumbers('dom-run', { start: 0, end: 1, first: 0 }),\r\n        frameRate: 8,\r\n        repeat: -1\r\n    });\r\n    scene.anims.create({\r\n        key: 'cowboy-stand',\r\n        frames: scene.anims.generateFrameNumbers('cowboy', { start: 0, end: 1, first: 0 }),\r\n        frameRate: 4,\r\n        repeat: -1\r\n    });\r\n    scene.anims.create({\r\n        key: 'blink',\r\n        frames: scene.anims.generateFrameNumbers('blink', { start: 0, end: 1, first: 0 }),\r\n        frameRate: 2,\r\n        repeat: -1\r\n    });\r\n    scene.anims.create({\r\n        key: 'godown',\r\n        frames: scene.anims.generateFrameNumbers('ui-go-down', { start: 0, end: 1, first: 0 }),\r\n        frameRate: 2,\r\n        repeat: -1\r\n    });\r\n}\r\nfunction story() {\r\n    // TODO: 스토리 시작\r\n    console.log('스토리 시작');\r\n    ui.mainText.setVisible(true);\r\n    ShakeObject(ui.mainText, 20, 20, 240);\r\n}\r\nfunction toNextChapter(){\r\n    var next = parseInt(gameStatus.chapterNum) + 1;\r\n    ui.talkBox.setVisible(false);\r\n    ui.taskBox.setVisible(false);\r\n    ui.black.setVisible(true);\r\n    game.scene.scenes[0].tweens.add({\r\n        targets: ui.black,\r\n        alpha: 1,\r\n        duration: 1400,\r\n        onComplete: function () {\r\n            ui.bg.setVisible(false);\r\n            gameStatus.chapter = 'chapter-' + next;\r\n            gameStatus.idx = 0;\r\n            ui.black.setVisible(false);\r\n        }\r\n    });\r\n}\r\nfunction chapter(chapterNum) {\r\n    // TODO: 챕터 시작\r\n    console.log('챕터', chapterNum, '시작');\r\n    ui.mainText.setVisible(false);\r\n    ui.chapterText.setVisible(true);\r\n    ui.chapterText.alpha = 0;\r\n    // 챕터 타이틀 애니메이션\r\n    if(mainObjConfig.skip !== 0){\r\n        mainObjConfig.skip = 0;\r\n        startChapter();\r\n        return;\r\n    }\r\n    ui.chapterText.text = line.chapter[gameStatus.chapterNum];\r\n    game.scene.scenes[0].tweens.add({\r\n        targets: ui.chapterText,\r\n        alpha: 1,\r\n        duration: 2400,\r\n        yoyo: true,\r\n        ease: Phaser.Math.Easing.Elastic.InOut,\r\n        onComplete: startChapter\r\n    });\r\n}\r\n// 챕터 시작\r\nfunction startChapter() {\r\n    ui.talkText.text = '';\r\n    mainObjConfig.taskIndex = 0;\r\n    var chapNum = gameStatus.chapterNum;\r\n    ui.bg.setVisible(true).setFrame(gameStatus.chapterNum-1);\r\n    if(chapNum === 1){\r\n        mainObject.player.setVisible(true).setAlpha(0);\r\n        game.scene.scenes[0].tweens.add({\r\n            targets: mainObject.player,\r\n            alpha: 1,\r\n            duration: 3200,\r\n            ease: 'linear'\r\n        });\r\n        ui.talkBox.setVisible(true);\r\n        typewriteText(ui.talkText, line.story[chapNum][0], 100);\r\n    }\r\n    else if(chapNum === 2){\r\n        if(mainObjConfig.isSkipped){\r\n            following.start = true;\r\n            mainObject.player.setVisible(true);\r\n            mainObject.dom.setVisible(true);\r\n            mainObject.dom.x = display.centerW - 20;\r\n        }\r\n        otherObject.building.setVisible(true);\r\n        mainObject.player.y = -120;\r\n        mainObject.dom.y = -120;\r\n        following.isMoving = true;\r\n        characterMove(mainObject.player, display.centerW, 100, 160);\r\n        var talk = setTimeout(function () {\r\n            ui.talkBox.setVisible(true);\r\n            typewriteText(ui.talkText, line.story[chapNum][0], 100);\r\n            clearTimeout(talk);\r\n        }, 800);\r\n    }\r\n    \r\n}\r\n// TODO: 대화 종료\r\nfunction talkClosed() {\r\n    // 공통 작업\r\n    setTimeout(() => mainObjConfig.characterMove = true, 60);\r\n    ui.talkBox.setVisible(false);\r\n    ui.taskBox.setVisible(true);\r\n    ui.taskText.text = line.task[gameStatus.chapterNum - 1][mainObjConfig.taskIndex];\r\n}\r\nfunction characterMove(character, x, y, speed) {\r\n    var name;\r\n    if(character === mainObject.player) {\r\n        name = 'player';\r\n        if(character.anims.currentAnim.key !== 'run') character.play('run');\r\n    }\r\n    else if(character === mainObject.dom) {\r\n        name = 'dom';\r\n        if(character.anims.currentAnim.key !== 'dom-run') character.play('dom-run');\r\n    }\r\n    charMovePos[name].x = x;\r\n    charMovePos[name].y = y;\r\n\r\n    mainObjConfig.look = null;\r\n    character.setFlipX(x < character.x);\r\n\r\n    game.scene.scenes[0].physics.moveToObject(character, {x: x, y: y}, speed);\r\n}\r\nfunction looking(character, target, each) {\r\n    character.setFlipX(character.x > target.x);\r\n    if(each) target.setFlipX(target.x > character.x);\r\n}\r\nfunction update () {\r\n    // TODO 업데이트\r\n    // 터치 포지션 근접시 리셋\r\n    let dis = {\r\n        player: Phaser.Math.Distance.Between(mainObject.player.x, mainObject.player.y, charMovePos.player.x, charMovePos.player.y),\r\n        dom: Phaser.Math.Distance.Between(mainObject.dom.x, mainObject.dom.y, charMovePos.dom.x, charMovePos.dom.y)\r\n    };\r\n    if (mainObject.player.body.speed > 0)\r\n    {\r\n        if(following.start) {\r\n            var gap = dis.player < Phaser.Math.Distance.Between(mainObject.dom.x, mainObject.dom.y, charMovePos.player.x, charMovePos.player.y);\r\n            if(gap){\r\n                following.distance = Phaser.Math.Distance.Between\r\n                (mainObject.player.x, mainObject.player.y, mainObject.dom.x, mainObject.dom.y);\r\n            }\r\n        }\r\n        // 캐릭터 레이어 변경\r\n        mainObject.group.list.sort(function(a, b) {\r\n            return a.y > b.y ? 1 : -1;\r\n        });\r\n\r\n        // 정지\r\n        if (dis.player < 4)\r\n        {\r\n            if(mainObjConfig.path !== null){\r\n                if(mainObjConfig.path.length > mainObjConfig.pathCount + 1){\r\n                    mainObjConfig.pathCount++;\r\n                    characterMove(mainObject.player, mainObjConfig.path[mainObjConfig.pathCount].x, mainObjConfig.path[mainObjConfig.pathCount].y, 160);\r\n                    if(following.start) following.isMoving = true;\r\n                }\r\n                else {\r\n                    mainObject.player.body.reset(charMovePos.player.x, charMovePos.player.y);\r\n                    mainObject.player.play('stand');\r\n                    if(mainObjConfig.look !== null){\r\n                        looking(mainObject.player, mainObjConfig.look, false);\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n    if (mainObject.dom.body.speed > 0)\r\n    {\r\n        // 캐릭터 레이어 변경\r\n        mainObject.group.list.sort(function(a, b) {\r\n            return a.y > b.y ? 1 : -1;\r\n        });\r\n\r\n        // 정지\r\n        if (dis.dom < 4)\r\n        {\r\n            mainObject.dom.body.reset(charMovePos.dom.x, charMovePos.dom.y);\r\n            mainObject.dom.play('dom-stand');\r\n            if(!following.start) bodyConfig.dom.active = true;\r\n            else following.Move = false;\r\n        }\r\n    }\r\n}\r\nfunction InitObject(obj, x, y, origin, setInteractive) {\r\n    obj.x = x;\r\n    obj.y = y;\r\n    obj.setOrigin(origin);\r\n    if(setInteractive) obj.setInteractive();\r\n}\r\nfunction RandomPlusMinus() {\r\n    return (Math.random() > 0.5) ? 1 : -1;\r\n}\r\nfunction RandomizePos(obj, x, y, min, max) {\r\n    obj.x = x + min + Math.random() * max * RandomPlusMinus();\r\n    obj.y = y + min + Math.random() * max * RandomPlusMinus();\r\n}\r\nfunction ShakeObject(obj, max, speed, time) {\r\n    if(timer.shaker !== null) return;\r\n    const x = obj.x;\r\n    const y = obj.y;\r\n    setTimeout(()=> {\r\n        clearTimeout(timer.shaker);\r\n        timer.shaker = null;\r\n        obj.x = x;\r\n        obj.y = y;\r\n    }, time);\r\n    repeat();\r\n    function repeat() {\r\n        RandomizePos(obj, x, y, 0, max);\r\n        timer.shaker = setTimeout(repeat, speed);\r\n    }\r\n}\r\nfunction typewriteText(object, txt, speed) {\r\n    const length = txt.length\r\n    let i = 0\r\n    game.scene.scenes[0].time.addEvent({\r\n        callback: () => {\r\n            object.text += txt[i]\r\n            ++i\r\n        },\r\n        repeat: length - 1,\r\n        delay: speed\r\n    })\r\n}"],"names":[],"sourceRoot":""}