{"version":3,"file":"app.js","mappings":";;;;;AAAA,qEAAqE,kBAAkB,gBAAgB,yBAAyB;AAChI;AACA,iBAAiB;AACjB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,WAAW;AACxB,UAAU,WAAW;AACrB,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,aAAa,wCAAwC;AACrD,wBAAwB,wCAAwC;AAChE,iBAAiB,gCAAgC;;AAEjD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,8BAA8B;AACvC,SAAS,8BAA8B;AACvC,SAAS,8BAA8B;AACvC,SAAS,+BAA+B;AACxC,SAAS,+BAA+B;AACxC;AACA;AACA;AACA,gBAAgB,2BAA2B;AAC3C,cAAc;AACd,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,8CAA8C;AACpG,2DAA2D,gDAAgD;AAC3G;AACA,0DAA0D,8CAA8C;AACxG,0DAA0D,8CAA8C;AACxG,oEAAoE,+CAA+C;AACnH,gEAAgE,8CAA8C;AAC9G;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,4BAA4B;AAClG;AACA;AACA;AACA,iBAAiB,iBAAiB;AAClC,iBAAiB,iBAAiB;AAClC,iBAAiB,gBAAgB;AACjC,iBAAiB;AACjB;AACA;AACA;AACA;AACA,gCAAgC,OAAO;AACvC,yEAAyE,4DAA4D;AACrI;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC,mCAAmC;AACnC,mCAAmC;AACnC,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,0BAA0B;AAC1B,uBAAuB;AACvB,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,8BAA8B;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,iCAAiC;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,8BAA8B;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,yBAAyB;AAC7C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU,eAAe;AACzB,UAAU,eAAe;AACzB,UAAU,eAAe;AACzB,UAAU,gBAAgB;AAC1B,UAAU;AACV;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,wBAAwB,QAAQ;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,sBAAsB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,cAAc;AACvB,SAAS,eAAe;AACxB,SAAS,cAAc;AACvB,SAAS,eAAe;AACxB,SAAS,cAAc;AACvB;AACA,SAAS,eAAe;AACxB,SAAS,cAAc;AACvB,SAAS,eAAe;AACxB,SAAS,cAAc;AACvB,SAAS,eAAe;AACxB;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;;AAGL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,0CAA0C;AAC5D,oBAAoB;AACpB,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,2BAA2B;AAC/C;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,8BAA8B;AAClD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,4BAA4B;AACvF;AACA;AACA,KAAK;AACL;AACA;AACA,6DAA6D,4BAA4B;AACzF;AACA;AACA,KAAK;AACL;AACA;AACA,6DAA6D,4BAA4B;AACzF;AACA,KAAK;AACL;AACA;AACA,kEAAkE,4BAA4B;AAC9F;AACA,KAAK;AACL;AACA;AACA,kEAAkE,mBAAmB;AACrF;AACA,KAAK;AACL;AACA;AACA,gEAAgE,kBAAkB;AAClF;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,yDAAyD,kBAAkB;AAC3E;AACA,KAAK;AACL;AACA;AACA,yDAAyD,kBAAkB;AAC3E;AACA,KAAK;AACL;AACA;AACA,yDAAyD,kBAAkB;AAC3E;AACA;AACA,KAAK;AACL;AACA;AACA,yDAAyD,kBAAkB;AAC3E;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8EAA8E,YAAY,OAAO,wDAAwD,IAAI,YAAY;AACzK;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,eAAe;AACf,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB,sCAAsC;AAC1D;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA,eAAe;AACf,eAAe;AACf,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,+BAA+B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,OAAO;AAC3C;AACA;AACA;AACA,4CAA4C,OAAO;AACnD;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA,oBAAoB,sBAAsB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,yBAAyB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,8BAA8B;AAClD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA,4BAA4B,gCAAgC;AAC5D;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,gCAAgC;AAC5D;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,8BAA8B;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,8BAA8B;AAClD;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,4CAA4C;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,qBAAqB;AACrB;AACA;AACA;AACA,2BAA2B,4CAA4C;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,4CAA4C;AAC3F,6BAA6B;AAC7B;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,iEAAiE;AACrH;AACA;AACA,6BAA6B;AAC7B;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,oBAAoB,gBAAgB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,2BAA2B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,8BAA8B;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,4BAA4B,8BAA8B;AAC1D;AACA;AACA;AACA,iBAAiB;AACjB;AACA,4BAA4B,8BAA8B;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C","sources":["webpack://gajwa-playground/./public/rebuild.js"],"sourcesContent":["console.log(\"%c@ MYZY.SPACE 2021 POWERED BY MYZY_\", \"color: #00ff00; font-weight: 900; font-size: 1em; background-color: black; padding: 1rem\");\nconst font = new FontFaceObserver('dgm').load();\nconst display = {width : 360, height: 680, centerW : 180, centerH: 340 };\nconst fontConfig = {font: '32px \"dgm\"', color: '#fff'};\nconst config = {\n    type: Phaser.AUTO,\n    width: display.width,\n    height: display.height,\n    physics: {\n        default: 'arcade',\n        arcade: {\n            //debug: true\n        }\n    },\n    scene: {\n        preload: preload,\n        create: create,\n        update: update\n    },\n    parent: 'canvas',\n    pixelArt: true,\n    plugins: {\n        scene: [\n            {\n                key: \"PhaserNavMeshPlugin\", // Key to store the plugin class under in cache\n                plugin: PhaserNavMeshPlugin, // Class that constructs plugins\n                mapping: \"navMeshPlugin\", // Property mapping to use for the scene, e.g. this.navMeshPlugin\n                start: true\n            },\n        ]\n    },\n    mode: Phaser.Scale.FIT,\n};\nconst game = new Phaser.Game(config);\nconst mainObject = {\n    player : 'main player',\n    dom : 'dom'\n};\nconst object = {};\n// TODO 설정\nconst path = new Map();\nconst moveTargets = {\n    player: {x: 0, y: 0},\n    dom: {x: 0, y: 0},\n    engineer: {x: 0, y: 0}\n};\nconst mainConfig = {\n    debugMode : false,\n    debugModeChapter: 0,\n\n    playerMovable : false,\n    domFollow: false,\n\n    // 이동 후 바라볼 오브젝트\n    lookAt: {player: null, dom: null, engineer: null},\n    moveFinishedEvent: {player: null, dom: null, engineer: null},\n    pathCount: { player: 0, dom: 0, engineer: 0 },\n\n    // ui 설정\n    titleFadeOut : null,\n\n    // game 설정\n    seedNum : 0,\n    pcTimerPushed : false,\n    pcTimer : 0,\n    pcCrackCount : 0,\n    clear : [false, false, false, false, false],\n    reward: [0, 0, 0, 0, 0],\n    livingSheep: 0,\n    sheepJump: null,\n    sheepLast : [],\n    sheepBlinkTimer : [null, null, null, null, null],\n    bridgeJumpingNow: false,\n    bridgeSelection: 0,\n    bridgeAnswer : [1, 2, 5, 7, 8],\n    bridgeFail : [0, 3, 4, 6, 9],\n    sheepEndPos : [\n        {x: 40, y: display.height - 80},\n        {x: 40, y: display.height - 20},\n        {x: 80, y: display.height - 50},\n        {x: 120, y: display.height - 20},\n        {x: 120, y: display.height - 80},\n    ],\n    deadSheep : [],\n    bridgePos : {\n        start: {x: display.centerW, y: 192},\n        end: {x: display.centerW + 60, y: display.height - 100}\n    },\n\n    fishingbarGrav: null,\n    fishCasting: null,\n    fishingBarSize: 40,\n    fishFloatTween: [],\n    fishingTimer: null,\n    fishingFailTimer: null,\n    fishWait: false,\n    fishingRodOn: false,\n    fishingNow: false,\n    fishPoint: 0,\n    fishRun: 0\n}\nconst timer = {};\nconst event = {};\nconst maps = {};\nconst ui = {};\nconst line = {};\nconst debug = {};\nconst status = {\n    scene: 'title',\n    index: 0,\n    chapterIdx: 0,\n    taskIdx: 0\n};\n\nfunction preload() {\n    // TODO 프리로드\n    // data\n    this.load.json('text', 'data/text.json');\n    // tile map\n    this.load.tilemapTiledJSON(\"map\", \"map/map.json\");\n    this.load.image(\"tileset\", \"map/tile-set.png\");\n    // sprites\n    this.load.aseprite('character', 'image/characters.png', 'image/characters.json');\n    this.load.aseprite('stones', 'image/stones.png', 'image/stones.json');\n    this.load.image(\"fish-player\", \"image/fishchar.png\");\n    this.load.atlas('obj', 'image/obj.png', 'image/obj.json');\n    // UI\n    this.load.spritesheet('mark', 'image/mark.png', { frameWidth: 32, frameHeight: 32, endFrame: 1 });\n    this.load.spritesheet('bg', 'image/backgrounds.png', { frameWidth: 180, frameHeight: 340, endFrame: 4 });\n    this.load.atlas('minigame', 'image/minigame.png', 'image/minigame.json');\n    this.load.spritesheet('pc-err', 'image/pc-err.png', { frameWidth: 96, frameHeight: 80, endFrame: 5 });\n    this.load.spritesheet('bridge', 'image/bridge.png', { frameWidth: 32, frameHeight: 32, endFrame: 9 });\n    this.load.spritesheet('float-water', 'image/float-water.png', { frameWidth: 64, frameHeight: 32, endFrame: 18 });\n    this.load.spritesheet('fish-icon', 'image/fish-icon.png', { frameWidth: 16, frameHeight: 16, endFrame: 1 });\n    this.load.atlas('keyboard', 'image/keyboard.png', 'image/keyboard.json');\n    this.load.atlas('ui', 'image/ui.png', 'image/ui.json');\n    // plugins\n    this.load.plugin('rexninepatchplugin', 'rexninepatchplugin.min.js', true);\n    // particle\n    this.load.atlas(\"leaf\", \"image/leaf.png\", 'image/leaf.json');\n\n    //sample\n    this.load.image('sample', 'image/sample/pc.png');\n}\nfunction create() {\n    const resetConfig = {};\n    Object.keys(mainConfig).forEach(function (v) {\n        resetConfig[v] = mainConfig[v];\n    });\n\n    status.chapterIdx = mainConfig.debugModeChapter;\n    setLines(this);\n    setAnimations(this);\n    createGraphics(this);\n    createUIObjects(this);\n    createCharacters(this);\n    createObjects(this);\n    createParticles(this);\n    buildMap(this);\n    setLayer(this);\n    this.input.on('pointerup', pointer => {\n        if(!mainConfig.playerMovable) return;\n        mainConfig.pathCount.player = 1;\n        path.set('player', maps.navMesh.findPath(mainObject.player, { x: pointer.x, y: pointer.y }));\n        if(path.get('player') === null){\n            let length = 10;\n            const anglePos = [\n                {x: -length, y: 0},\n                {x: 0, y: -length},\n                {x: length, y: 0},\n                {x: 0, y: length}\n            ];\n            newPathFind();\n            function newPathFind() {\n                let newPath;\n                for (let i = 0; i < 4; i++) {\n                    newPath = maps.navMesh.findPath(mainObject.player, { x: pointer.x + anglePos[i].x, y: pointer.y + anglePos[i].y })\n                    if(newPath !== null) {\n                        path.set('player', newPath);\n                        break;\n                    }\n                }\n                if(newPath === null){\n                    length += 10;\n                    anglePos[0] = {x: -length, y: 0};\n                    anglePos[1] = {x: 0, y: -length};\n                    anglePos[2] = {x: length, y: 0};\n                    anglePos[3] = {x: 0, y: length};\n                    newPathFind();\n                }\n            }\n        }\n        if(path.get('player').length < 1) return;\n        moveCharacter('player');\n    });\n    this.input.keyboard.addKey('Q').on('down', function(event) {\n        console.log('Reset');\n        resetGame(resetConfig);\n    })\n}\nfunction resetGame(resetConfig) {\n    game.scene.scenes[0].scene.restart();\n    Object.keys(mainConfig).forEach(function (v) {\n        mainConfig[v] = resetConfig[v];\n    });\n    moveTargets.player = {x: 0, y: 0};\n    moveTargets.dom = {x: 0, y: 0};\n    moveTargets.engineer = {x: 0, y: 0};\n    status.scene ='title';\n    status.index =0;\n    status.chapterIdx =0;\n    status.taskIdx =0;\n}\nfunction update() {\n    // TODO 업데이트 프레임\n    let dis = {\n        player: Phaser.Math.Distance.Between(mainObject.player.x, mainObject.player.y, moveTargets.player.x, moveTargets.player.y),\n        dom: Phaser.Math.Distance.Between(mainObject.dom.x, mainObject.dom.y, moveTargets.dom.x, moveTargets.dom.y),\n        engineer: Phaser.Math.Distance.Between(mainObject.engineer.x, mainObject.engineer.y, moveTargets.engineer.x, moveTargets.engineer.y),\n\n        each: Phaser.Math.Distance.Between(mainObject.player.x, mainObject.player.y, mainObject.dom.x, mainObject.dom.y),\n    }\n    if (mainObject.player.body.speed > 0){\n        if (dis.player < 4){\n            // 목적지 도착시 플레이어 정지\n            let playerPath = path.get('player');\n            if(playerPath === null || playerPath.length < 1 || playerPath.length === mainConfig.pathCount.player + 1) {\n                mainObject.player.body.reset(mainObject.player.x, mainObject.player.y);\n                if(mainObject.player.anims.currentAnim.key !== 'player-stand') mainObject.player.play('player-stand');\n                moveFinished(mainObject.player);\n            }\n            // 다음 경로로 변경\n            else {\n                mainConfig.pathCount.player++;\n                moveCharacter('player');\n            }\n        }\n        // 플레이어와 멀때 따라가기 경로\n        if(dis.each > 80 && mainConfig.domFollow){\n            moveToPoint('dom', mainObject.player.x, mainObject.player.y, true);\n        }\n    }\n    if (mainObject.dom.body.speed > 0){\n        if (dis.dom < 4){\n            // 목적지 도착시 정지\n            if(path.get('dom') === null || path.get('dom').length < 1 || path.get('dom').length === mainConfig.pathCount.dom + 1) {\n                mainObject.dom.body.reset(mainObject.dom.x, mainObject.dom.y);\n                if(mainObject.dom.anims.currentAnim.key !== 'dom-stand') mainObject.dom.play('dom-stand');\n                moveFinished(mainObject.dom);\n            }\n            // 다음 경로로 변경\n            else {\n                mainConfig.pathCount.dom++;\n                moveCharacter('dom');\n            }\n        }\n        // 플레이어와 가까울때 정지\n        else if(dis.each < 40 && mainConfig.domFollow){\n            mainObject.dom.body.reset(mainObject.dom.x, mainObject.dom.y);\n            if(mainObject.dom.anims.currentAnim.key !== 'dom-stand') mainObject.dom.play('dom-stand');\n\n        }\n    }\n    if (mainObject.engineer.body.speed > 0){\n        if (dis.engineer < 4){\n            // 목적지 도착시 정지\n            if(path.get('engineer') === null || path.get('engineer').length < 1 || path.get('engineer').length === mainConfig.pathCount.engineer + 1) {\n                mainObject.engineer.body.reset(mainObject.engineer.x, mainObject.engineer.y);\n                if(mainObject.engineer.anims.currentAnim.key !== 'engineer-stand') mainObject.engineer.play('engineer-stand');\n                moveFinished(mainObject.engineer);\n            }\n            // 다음 경로로 변경\n            else {\n                mainConfig.pathCount.engineer++;\n                moveCharacter('engineer');\n            }\n        }\n    }\n    if(status.chapterIdx === 2){\n        if(status.index === 13){\n            if(mainConfig.bridgeSelection < 5){\n                for (let i = 0; i < mainObject.sheeps.length; i++){\n                    let sheepDis = Phaser.Math.Distance.Between(\n                        mainObject.sheeps[i].x,\n                        mainObject.sheeps[i].y,\n                        mainConfig.bridgePos.start.x,\n                        mainConfig.bridgePos.start.y);\n                    if(mainObject.sheeps[i].body.speed > 0){\n                        if (sheepDis < 4){\n                            mainObject.sheeps[i].body.reset(mainObject.sheeps[i].x, mainObject.sheeps[i].y);\n                            mainObject.sheeps[i].play('sheep-stand');\n                            if(mainConfig.sheepJump !== null) {\n                                mainConfig.sheepJump();\n                                mainConfig.sheepJump = null;\n                            }\n                        }\n                    }\n                }\n                for (let i = 0; i < mainConfig.deadSheep.length; i++) {\n                    if(mainConfig.deadSheep[i].x < -16){\n                        mainConfig.deadSheep[i].disableBody();\n                        mainConfig.deadSheep[i].setVisible(false);\n                    }\n                }\n            }\n            else {\n                for (let i = 0; i < mainObject.sheeps.length; i++) {\n                    if(mainObject.sheeps[i].body.speed > 0){\n                        let sheepDis = Phaser.Math.Distance.Between(\n                            mainObject.sheeps[i].x,\n                            mainObject.sheeps[i].y,\n                            mainConfig.sheepLast[i].x,\n                            mainConfig.sheepLast[i].y);\n                        if(sheepDis < 4){\n                            mainObject.sheeps[i].body.reset(mainObject.sheeps[i].x, mainObject.sheeps[i].y);\n                            mainObject.sheeps[i].play('sheep-stand');\n                            if(i === mainObject.sheeps.length - 1) {\n                                setTimeout(function () {\n                                    sheepFinish();\n                                }, 400);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    if(status.chapterIdx === 3){\n        if(mainConfig.fishingNow){\n            const side = {top: ui.fishingBar.y - mainConfig.fishingBarSize * 0.5, bottom: ui.fishingBar.y + mainConfig.fishingBarSize * 0.5};\n            if(side.top < ui.fishIcon.y + 42 && ui.fishIcon.y - 42 < side.bottom){\n                ui.fishIcon.setTint(0x00ff00);\n                if(mainConfig.fishPoint < 320) mainConfig.fishPoint++;\n                else if(mainConfig.fishPoint === 320) {\n                    // 잡음\n                    mainConfig.fishPoint = 0;\n                    fishingFinish(true);\n                }\n            } else {\n                ui.fishIcon.setTint(0xff0000);\n                if(mainConfig.fishPoint > 0) mainConfig.fishPoint--;\n                else if(mainConfig.fishPoint === 0) {\n                    mainConfig.fishRun++;\n                    if(mainConfig.fishRun > 3200){\n                        // 도망\n                        mainConfig.fishRun = 0;\n                        fishingFinish(false);\n                    }\n                }\n            }\n        }\n    }\n\n    // 레이어 순서 정렬\n    mainObject.group.list.sort(function(a, b) {\n        return a.y > b.y ? 1 : -1;\n    });\n    if(mainConfig.pcTimerPushed && !mainConfig.clear[0]) mainConfig.pcTimer++;\n    if(mainConfig.pcTimer > 140) {\n        mainConfig.pcTimerPushed = false;\n        mainConfig.pcTimer = 0;\n        pcShutDown('power');\n    }\n}\n\n// TODO 오브젝트 생성\nfunction buildMap(scene) {\n    // 타일맵 생성 <br>\n    // 네비메쉬 : maps.navMesh <br>\n    // 벽 레이어 : maps.wallLayer\n    maps.tilemap = scene.add.tilemap(\"map\");\n    maps.tileset = maps.tilemap.addTilesetImage(\"tileset\", \"tileset\");\n    maps.tilemap.createLayer(\"bg\", maps.tileset);\n    maps.wallLayer = [];\n    maps.objectLayer = [];\n\n    for (let i = 0; i < 4; i++) {\n        maps.wallLayer[i] = maps.tilemap.createLayer(\"display\" + i, maps.tileset).setVisible(false);\n        maps.objectLayer[i] = maps.tilemap.getObjectLayer(i.toString());\n    }\n    maps.navMesh = scene.navMeshPlugin.buildMeshFromTiled(\"mesh\", maps.objectLayer[0], 12.5);\n}\nfunction createCharacters(scene) {\n    // 메인 캐릭터 생성 <br>\n    // 플레이어 오브젝트 : mainObject.player\n    mainConfig.anims = scene.anims.createFromAseprite('character');\n    let chracterData = scene.cache.json.get('character').meta.frameTags;\n    for (let i = 0; i < chracterData.length; i++) {\n        if(chracterData[i].repeat === undefined) mainConfig.anims[i].repeat = -1;\n        else mainConfig.anims[i].repeat = chracterData[i].repeat;\n        if(chracterData[i].frameRate === undefined) mainConfig.anims[i].frameRate = 2;\n        else mainConfig.anims[i].frameRate = chracterData[i].frameRate;\n    }\n\n    mainObject.player = scene.physics.add.sprite(display.centerW, display.centerH - 40)\n        .setOrigin(0.5, 1).setScale(2).setSize(16, 16).setOffset(8, 16).play('player-stand');\n    mainObject.dom = scene.physics.add.sprite(display.centerW - 60, display.centerH - 60)\n        .setOrigin(0.5, 1).setScale(2).setSize(16, 16).setOffset(8, 16).play('dom-stand').setVisible(false);\n    mainObject.engineer = scene.physics.add.sprite(104, 506)\n        .setOrigin(0.5, 1).setScale(2).setSize(16, 16).setOffset(8, 16).play('engineer-type').setVisible(false);\n    mainObject.man = scene.physics.add.sprite(302, 168).play('man-stand')\n        .setOrigin(0.5, 1).setScale(2).setSize(16, 16).setOffset(8, 16).setFlipX(true).setVisible(false);\n    mainObject.fishman = scene.physics.add.sprite(146, 396).play('fishman-stand')\n        .setOrigin(0.5, 1).setScale(2).setSize(16, 16).setOffset(8, 16).setVisible(false);\n\n    mainObject.sheeps = [];\n    const sheepPos = [\n        { x: 216, y: 64 },\n        { x: 272, y: 64 },\n        { x: 328, y: 64 },\n        { x: 216, y: 106 },\n        { x: 272, y: 106 }\n        ]\n    for (let i = 0; i < 5; i++) {\n        mainObject.sheeps[i] = scene.physics.add.sprite(sheepPos[i].x, sheepPos[i].y).play('sheep-stand')\n            .setOrigin(0.5, 1).setScale(2).setSize(16, 16).setOffset(8, 16).setFlipX(Math.random() > 0.5).setVisible(false);\n        mainConfig.sheepBlinkTimer[i] = getRandomInt(160);\n    }\n}\nfunction createGraphics(scene) {\n    // TODO 그래픽 생성\n    // 디버그 그래픽\n    debug.graphics = scene.add.graphics();\n    debug.graphics.lineStyle(1, 0x00ff00, 1);\n    debug.graphics.fillStyle( 0xff0000, 1);\n}\nfunction createUIObjects(scene) {\n    // TODO UI 오브젝트 생성\n    ui.cam = scene.cameras.main;\n    ui.bg = scene.add.sprite(0, 0, 'bg').setOrigin(0).setScale(2);\n    ui.smoke = scene.add.sprite(200, 100).play('smoke').setScale(2).setVisible(false);\n\n    ui.skip = scene.add.rectangle(display.centerW, display.centerH, display.width, display.height, 0x00ff00, 0)\n        .setInteractive();\n    ui.white = scene.add.rectangle(display.centerW, display.centerH, display.width, display.height, 0xffffff);\n    ui.background = scene.add.rectangle(display.centerW, display.centerH, display.width, display.height, 0x000000);\n\n    ui.dark = scene.add.rectangle(display.centerW, display.centerH, display.width, display.height, 0x000000).setVisible(false);\n    ui.title = scene.add.sprite(display.centerW, 180, 'ui', 'title').setOrigin(0.5).setScale(2);\n    ui.largeText = scene.add.text(display.centerW, display.centerH, '', fontConfig)\n        .setAlign('center').setOrigin(0.5).setVisible(false);\n    ui.mark = scene.add.sprite(display.centerW - 60, display.centerH - 60, 'mark').play('mark')\n        .setOrigin(0.5, 1).setScale(2).setVisible(false);\n\n    ui.next = scene.physics.add.sprite(display.centerW - 60, display.height - 10).play('next')\n        .setSize(display.width, 20).setScale(2).setOffset(-60, 30).setVisible(false);\n\n    ui.fishmanPlace = scene.add.rectangle(80, display.height - 160, 160, 100, 0x00ff00).setVisible(false);\n    scene.physics.add.existing(ui.fishmanPlace);\n\n    // 미니게임 창 생성\n    ui.gameGroup = scene.add.container();\n    ui.gameBackground = scene.add.rectangle(display.centerW, display.centerH, display.width, display.height, 0x000000);\n    ui.gameTransitionUp = scene.add.sprite(display.centerW, 0, 'ui', 'transition').setOrigin(0.5, 0).setFlipY(true).setScale(2);\n    ui.gameTransitionDown = scene.add.sprite(display.centerW, display.height, 'ui', 'transition').setOrigin(0.5, 0).setScale(2);\n    ui.pcOff = scene.add.rectangle(display.centerW, 200, 188, 158, 0xffffff).setVisible(false);\n    ui.pcErr = scene.add.sprite(display.centerW, 200).play('pc-err').setOrigin(0.5).setScale(2);\n    ui.pcDown = scene.add.sprite(display.centerW, display.centerH - 136, 'keyboard', 'down').setOrigin(0.5).setScale(2).setVisible(false);\n    ui.pcKeyboard = scene.add.sprite(20, 608, 'minigame', 'pc-keyboard').setScale(2);\n    ui.pc = scene.add.sprite(42, 430, 'minigame', 'pc0').setScale(2);\n\n    ui.pcBreak = scene.add.rectangle(display.centerW - 16, display.centerH + 48, 210, 100, 0x0000f00, 0).setInteractive().on('pointerup', pointer => {\n        createParts(pointer.x, pointer.y, RandomPlusMinus() * 200, -100 + Math.random() * -400);\n    });\n    ui.pcPw = scene.add.container();\n    ui.pcPwList = [];\n    ui.pcInfo = '';\n    for (let i = 0; i < 4; i++) {\n        ui.pcPwList[i] = scene.add.text(114 + i * 36, 184, '*', fontConfig).setFontSize(48).setVisible(false);\n    }\n    ui.pcPw.add(ui.pcPwList);\n    ui.keyboard = scene.add.container();\n    function setKeyboard() {\n        let keys = [];\n        let pos = {x: 0, y: 0};\n        for (let i = 0; i < 14; i++) {\n            let index = null;\n            if(i === 10){\n                index = 'enter-';\n                pos.x = 268;\n                pos.y = 548;\n            }\n            else if(i === 11){\n                index = 'esc-';\n                pos.x = 52;\n                pos.y = 484;\n            }\n            else if(i === 12){\n                index = 'danger-';\n                pos.x = 52;\n                pos.y = 584;\n            }\n            else if(i === 13){\n                index = 'power-';\n                pos.x = 274;\n                pos.y = 362;\n            }\n            else{\n                index = i;\n                let y = (i < 5) ? 520 : 548;\n                pos.x = (i < 5) ? 52 + (i * 40) : 68 + ((i - 5) * 40);\n                pos.y = y;\n            }\n            keys[i] = scene.add.sprite(pos.x, pos.y, 'keyboard', index + 't').setScale(2).setInteractive();\n            keys[i].on('pointerdown', function () {\n                this.setTexture('keyboard', index + 'f');\n                if(index === 'power-') {\n                    mainConfig.pcTimerPushed = true;\n                    mainConfig.pcTimer = 0;\n                }\n            });\n            keys[i].on('pointerup', function () {\n                this.setTexture('keyboard', index + 't');\n                keyboardAction(index);\n                if(index === 'power-') mainConfig.pcTimerPushed = false;\n            });\n            keys[i].on('pointerout', function () {\n                this.setTexture('keyboard', index + 't');\n                if(index === 'power-') mainConfig.pcTimerPushed = false;\n            });\n        }\n        ui.keyboard.add(keys);\n        }\n    setKeyboard();\n\n    // 클릭 효과 생성\n    ui.pcParts = scene.physics.add.group({\n        visible: false,\n        active: false,\n        frameQuantity: 10,\n        maxSize: 10\n    });\n    // 낚시찌 물튐 효과 생성\n    ui.floatWater = scene.add.sprite(0, 0, 'float-water').setOrigin(0.5).setScale(3).setVisible(false);\n    ui.floatWaterWave = scene.add.group({\n        visible: false,\n        frameQuantity: 10,\n        maxSize: 10,\n    });\n\n    ui.effectGroup = scene.add.container();\n    ui.bottom = scene.add.rectangle(display.centerW, display.height + 80, 4000, 10, 0x000000, 0);\n    scene.physics.add.overlap(ui.bottom, ui.pcParts, disableParts, null, this);\n    scene.physics.add.existing(ui.bottom);\n    ui.effectGroup.add(ui.bottom);\n    function disableParts(bottom, parts) {\n        // 떨어진 나사 제거\n        parts.disableBody(true, true);\n    }\n    // 징검다리 생성\n    ui.bridges = [];\n    mainConfig.animsStones = scene.anims.createFromAseprite('stones');\n    let stoneData = scene.cache.json.get('stones').meta.frameTags;\n    for (let i = 0; i < stoneData.length; i++) {\n        if(stoneData[i].repeat === undefined) mainConfig.animsStones[i].repeat = -1;\n        else mainConfig.animsStones[i].repeat = stoneData[i].repeat;\n        if(stoneData[i].frameRate === undefined) mainConfig.animsStones[i].frameRate = 2;\n        else mainConfig.animsStones[i].frameRate = stoneData[i].frameRate;\n    }\n    const bridgePos = [\n        // 0\n        {x: 32, y: 272},\n        {x: 124, y: 278},\n        {x: 32, y: 336},\n        {x: 140, y: 336},\n        {x: 68, y: 398},\n        // 5\n        {x: 172, y: 398},\n        {x: 86, y: 460},\n        {x: 198, y: 458},\n        {x: 92, y: 518},\n        {x: 200, y: 512},\n    ]\n    for (let i = 0; i < 10; i++) {\n        ui.bridges[i] = scene.add.sprite(bridgePos[i].x + 64, bridgePos[i].y).play('stone' + i).setScale(2).setOrigin(0.5, 0);\n    }\n    // 낚시게임 생성\n    ui.fishing = scene.add.sprite(0, display.height).play('fishing').setScale(3);\n    ui.fishingPlayer = scene.add.sprite(121, 357.5, 'fish-player').setScale(3);\n\n    ui.fishingCastGroup = scene.add.container().setPosition(display.centerW, 140);\n    ui.fishingCastbar = scene.add.rectangle(0, 0, 0, 24, 0x00ff00).setOrigin(0.5);\n    ui.fishingCastBoxA = scene.physics.add.sprite(0, -15, 'ui', 'power0').setOrigin(0.5).setScale(3);\n    ui.fishingCastBoxB = scene.physics.add.sprite(0, -15, 'ui', 'power1').setOrigin(0.5).setScale(3);\n    ui.fishingCastGroup.add([ui.fishingCastBoxA, ui.fishingCastbar, ui.fishingCastBoxB])\n\n    ui.fishingGroup = scene.add.container();\n    ui.fishingBox = [];\n    let fishingBoxHeight = 80;\n    ui.fishingBox[0] = scene.add.rectangle(display.centerW, display.centerH - fishingBoxHeight * 1.5, 80, 20, 0x000000).setOrigin(0.5).setVisible(false);\n    ui.fishingBox[1] = scene.add.rectangle(display.centerW, display.centerH + fishingBoxHeight * 1.5 + 1.5, 80, 20, 0x000000).setOrigin(0.5).setVisible(false);\n    ui.fishIcon = scene.physics.add.sprite(display.centerW, display.centerH - 80).play('fish-icon').setScale(3).setFlipX(true)\n        .setSize(16, 12).setOffset(0, 2);\n    ui.fishingUI = scene.add.rexNinePatch({\n        x: display.centerW, y: display.centerH + 1,\n        width: 20, height: fishingBoxHeight,\n        key: 'ui',\n        baseFrame: 'fishing-bg',\n        columns: [6, undefined, 6],\n        rows: [6, undefined, 6],\n    }).setOrigin(0.5).setScale(3);\n\n\n    ui.fishingBar = scene.add.rectangle(display.centerW, display.centerH, 42, mainConfig.fishingBarSize * 3, 0x00ff00);\n    scene.physics.add.existing(ui.fishingBar);\n\n    ui.fishingEffect = scene.add.container();\n    ui.fishingGroup.add([ui.fishingUI, ui.fishingBox[0], ui.fishingBox[1], ui.fishingBar, ui.fishIcon]).setVisible(false);\n    ui.fishingEffect.add(ui.floatWater);\n\n    scene.physics.add.existing(ui.fishingBox[0], true);\n    scene.physics.add.existing(ui.fishingBox[1], true);\n    scene.physics.add.collider(ui.fishingBox[0], ui.fishingBar);\n    scene.physics.add.collider(ui.fishingBox[1], ui.fishingBar);\n    scene.physics.add.collider(ui.fishingBox[0], ui.fishIcon);\n    scene.physics.add.collider(ui.fishingBox[1], ui.fishIcon);\n    ui.fishingBar.body.bounce.y = 0.5;\n\n    ui.fishingBtn = scene.add.sprite(display.centerW - 48, display.height - 100, 'ui', 'fishBtn0').setOrigin(0.5).setScale(3).setInteractive();\n    ui.hookBtn = scene.add.sprite(display.centerW + 48, display.height - 100, 'ui', 'hookBtn0').setOrigin(0.5).setScale(3).setInteractive();\n\n    ui.fishingFloat = scene.add.sprite(0, 0, 'ui', 'float').setOrigin(0.5).setScale(3).setVisible(false);\n    ui.hookBtn.on('pointerdown', function (){\n        this.setTexture('ui', 'hookBtn1').setOrigin(0.5);\n    }).on('pointerup', function (){\n        this.setTexture('ui', 'hookBtn0').setOrigin(0.5);\n    }).on('pointerout', function (){\n        this.setTexture('ui', 'hookBtn0').setOrigin(0.5);\n    });\n\n    ui.fishingBtn.on('pointerdown', function () {\n        this.setTexture('ui', 'fishBtn1').setOrigin(0.5);\n        if(mainConfig.fishingNow){\n            mainConfig.fishingbarGrav = scene.tweens.addCounter({\n                from: 0,\n                to: -800,\n                ease: Phaser.Math.Easing.Linear,\n                duration: 1200,\n                onUpdate: function (tween)\n                {\n                    let value = Math.floor(tween.getValue());\n                    ui.fishingBar.body.setGravityY(value);\n                }\n            });\n        }\n        else {\n            cast();\n        }\n        function cast() {\n            clearTimeout(mainConfig.fishingTimer);\n            clearTimeout(mainConfig.fishingFailTimer);\n            mainConfig.fishCasting = null;\n            mainConfig.fishingTimer = null;\n\n            if(mainConfig.fishFloatTween[0]!==undefined) {\n                if(mainConfig.fishFloatTween[0].progress < 1) return;\n            }\n            if(mainConfig.fishingRodOn) {\n                // 물고기 입질이 있는 도중이면\n                if(mainConfig.fishWait){\n                    // 낚기 시작\n                    mainConfig.fishingNow = true;\n                    startFishing();\n                    return;\n                }\n                else {\n                    // 낚싯대 되돌리기\n                    ui.fishingFloat.setTexture('ui', 'float').setOrigin(0.5);\n                    ui.task.text = \"길게 눌러서 낚싯대를 던지자\";\n                    mainConfig.fishingRodOn = false;\n                    ui.fishingCastbar.width = 0;\n                    ui.fishingCastbar.setOrigin(0.5);\n                    ui.fishingFloat.setVisible(false);\n                    return;\n                }\n            }\n            let power = [0, 150];\n            casting(power);\n            function casting(power) {\n                let ease = (power[0] === 0) ? Phaser.Math.Easing.Quintic.In : Phaser.Math.Easing.Quintic.Out;\n                mainConfig.fishCasting = scene.tweens.addCounter({\n                    from: power[0],\n                    to: power[1],\n                    ease: ease,\n                    duration: 1200,\n                    repeat: 0,\n                    onUpdate: function (tween)\n                    {\n                        let value = Math.floor(tween.getValue());\n                        ui.fishingCastbar.width = value;\n                        ui.fishingCastbar.setOrigin(0.5);\n                    },\n                    onComplete: function () {\n                        let tmp = power[0];\n                        power[0] = power[1];\n                        power[1] = tmp;\n                        casting(power);\n                    }\n                });\n            }\n        }\n\n    }).on('pointerup', function () {\n        this.setTexture('ui', 'fishBtn0').setOrigin(0.5);\n        fishOut();\n    }).on('pointerout', function () {\n        this.setTexture('ui', 'fishBtn0').setOrigin(0.5);\n        fishOut();\n    });\n    function fishOut() {\n        if(mainConfig.fishingNow) {\n            mainConfig.fishingbarGrav?.stop();\n            ui.fishingBar.body.setGravityY(800);\n        }\n        else {\n            // 낚싯대 던지기 완료\n            if(mainConfig.fishCasting === null) return;\n            mainConfig.fishCasting?.stop();\n            let p = mainConfig.fishCasting.getValue();\n            fishingCastFloat(p);\n            mainConfig.fishCasting = null;\n        }\n    }\n\n    // 스테이지 별 미니게임 씬 오브젝트 추가\n    ui.gameScene = [];\n    ui.gameScene[0] = scene.add.container().add([ui.pcKeyboard, ui.pc, ui.keyboard, ui.pcErr, ui.pcPw, ui.pcDown, ui.pcOff, ui.pcBreak]);\n    ui.gameScene[1] = scene.add.container();\n    ui.gameScene[2] = scene.add.container().add([ui.fishing, ui.fishingPlayer, ui.fishingCastGroup, ui.fishingEffect, ui.fishingFloat, ui.fishingGroup, ui.fishingBtn, ui.hookBtn]);\n    ui.bridge = scene.add.container().setVisible(false);\n    ui.bridges.forEach(function (bridge, index) {\n        ui.bridge.add(bridge);\n        bridge.on('pointerup', function () {\n            selectBridge(index, bridge);\n        });\n    });\n\n    ui.gameGroup.add([ui.gameBackground, ui.gameTransitionDown, ui.gameTransitionUp]).setVisible(false);\n    // 게임 씬 배열만큼 게임그룹에 추가\n    ui.gameScene.forEach(scenes => {\n        ui.gameGroup.add(scenes);\n    });\n\n    ui.dialogGroup = scene.add.container();\n    ui.dialogBox = scene.add.rexNinePatch({\n        x: display.centerW, y: display.height - 10,\n        width: (display.width - 20) * 0.5, height: 180 * 0.5,\n        key: 'ui',\n        baseFrame: 'default',\n        columns: [8, undefined, 8],\n        rows: [8, undefined, 8],\n    }).setOrigin(0.5, 1).setScale(2);\n    ui.dialog = scene.add.text(30, display.height - 160, '', fontConfig).setFontSize(16).setLineSpacing(4);\n    ui.dialogGroup.add([ui.dialogBox, ui.dialog]).setVisible(false);\n    ui.taskGroup = scene.add.container();\n    ui.task = scene.add.text(42, 34, '', fontConfig).setFontSize(16).setLineSpacing(4);\n    ui.taskBox = scene.add.rexNinePatch({\n        x: display.centerW, y: 64,\n        width: (display.width - 20) * 0.5, height: 32,\n        key: 'ui',\n        baseFrame: 'task',\n        columns: [15, undefined, 15],\n        rows: [0, undefined, 0],\n    }).setOrigin(0.5, 1).setScale(2);\n    ui.taskGroup.add([ui.taskBox, ui.task]);\n    ui.taskGroup.y = -64;\n    ui.rewardBox = scene.add.rexNinePatch({\n        x: 0, y: 0,\n        width: 120, height: 32,\n        key: 'ui',\n        baseFrame: 'default',\n        columns: [8, undefined, 8],\n        rows: [8, undefined, 8],\n    }).setOrigin(0).setScale(2);\n    ui.rewardMsg = scene.add.text(120, 32, '', fontConfig).setFontSize(16).setOrigin(0.5).setLineSpacing(4);\n    ui.rewardGroup = scene.add.container().setPosition(display.centerW - 120, display.centerH - 40).setVisible(false);\n    ui.rewardGroup.add([ui.rewardBox, ui.rewardMsg]);\n\n    ui.skip.on('pointerup', function () {\n        skip();\n    });\n}\nfunction setTask(visible) {\n    let scene = game.scene.scenes[0];\n    let pos;\n    let ease;\n    if (visible){\n        pos = -8;\n        ease = Phaser.Math.Easing.Quintic.Out;\n        ui.task.text = line.task[status.chapterIdx][status.taskIdx];\n        status.taskIdx++;\n    }\n    else {\n        ease = Phaser.Math.Easing.Quintic.In;\n        pos = -64;\n    }\n    scene.tweens.add({\n        targets: ui.taskGroup,\n        y: pos,\n        duration: 1200,\n        ease: ease\n    });\n}\nfunction createParticles(scene) {\n    // 파티클 생성\n    let emitZone = new Phaser.Geom.Rectangle(-200, -600, 200, 1200);\n    mainObject.particles = scene.add.particles('obj', 'particle');\n    mainObject.particles.createEmitter({\n        x: 0,\n        y: 0,\n        speed: 80,\n        gravityX: 320,\n        gravityY: 120,\n        lifespan: 6000,\n        scale: 2,\n        emitZone: { source: emitZone }\n    });\n    let titlezone = new Phaser.Geom.Rectangle(0, -60, display.width, 10);\n    mainObject.TitleParticle = scene.add.particles('leaf');\n    mainObject.TitleEmitter = mainObject.TitleParticle.createEmitter({\n        frame: [ '0', '1', '2', '3'],\n        x: 0,\n        y: 0,\n        speed: 60,\n        gravityX: 0,\n        gravityY: 60,\n        lifespan: 6000,\n        quantity: 1,\n        frequency: 400,\n        scale: 2,\n        rotate: { start: 0, end: 360, ease: 'Back.easeOut' },\n        emitZone: { source: titlezone }\n    });\n}\nfunction createObjects(scene) {\n    // 기타 오브젝트 생성\n    object.list = [];\n    object.list[0] = scene.add.sprite(242, 472, 'obj', 'rock0').setScale(2).setOrigin(0, 1).setVisible(false);\n    object.list[1] = scene.add.sprite(12, 580, 'obj', 'rock1').setScale(2).setOrigin(0, 1).setVisible(false);\n    object.list[2] = scene.add.sprite(234, 596 + 80, 'obj', 'rock2').setScale(2).setOrigin(0, 1).setVisible(false);\n    object.list[3] = scene.add.sprite(58 * 2, 143 * 2 + 92 * 2,'obj', 'pc-0').setScale(2).setOrigin(0, 1).play('pc').setVisible(false);\n    object.list[4] = scene.add.sprite(110, 506, 'keyboard', 'pc-console').setScale(2).setOrigin(0, 1).setVisible(false);\n\n    // 위치 맞추기용\n    object.sample = scene.add.sprite(display.centerW, display.centerH, 'sample').setOrigin(0.5).setAlpha(0).setScale(2);\n\n}\nfunction setLayer(scene) {\n    // TODO 레이어 및 그룹 오브젝트 생성\n    mainObject.layer = scene.add.layer();\n\n    mainObject.bg = scene.add.container();\n    mainObject.bg.add([ui.bg, ui.smoke, ui.next, ui.bridge]);\n    for (let i = 0; i < maps.wallLayer.length; i++) {\n        mainObject.bg.add(maps.wallLayer[i]);\n    }\n\n    mainObject.group = scene.add.container();\n    mainObject.group.add([mainObject.player, mainObject.dom, mainObject.engineer, mainObject.man, mainObject.fishman]);\n    mainObject.group.add(object.list);\n    for (let i = 0; i < mainObject.sheeps.length; i++) {\n        mainObject.group.add(mainObject.sheeps[i]);\n    }\n\n    ui.group = scene.add.container();\n    ui.group.add([ui.background, ui.mark, ui.gameGroup, ui.dialogGroup, ui.rewardGroup, ui.taskGroup, ui.largeText, ui.white, ui.title, ui.dark, ui.skip]);\n\n    // 레이어 정렬\n    mainObject.layer.add(mainObject.bg);\n    mainObject.layer.add(mainObject.group);\n    mainObject.layer.add(mainObject.particles);\n    mainObject.layer.add(ui.group);\n    mainObject.layer.add(ui.effectGroup);\n    mainObject.layer.add(mainObject.TitleParticle);\n    mainObject.layer.add(object.sample);\n}\nfunction setAnimations(scene) {\n    // TODO 애니메이션 추가\n    scene.anims.create({\n        key: 'mark',\n        frames: scene.anims.generateFrameNumbers('mark', { start: 0, end: 1, first: 0 }),\n        frameRate: 2,\n        repeat: -1\n    });\n    scene.anims.create({\n        key: 'pc-err',\n        frames: scene.anims.generateFrameNumbers('pc-err', { start: 0, end: 5, first: 0 }),\n        frameRate: 24,\n        repeat: -1\n    });\n    scene.anims.create({\n        key: 'bridge',\n        frames: scene.anims.generateFrameNumbers('bridge', { start: 0, end: 9, first: 0 }),\n        frameRate: 24\n    });\n    scene.anims.create({\n        key: 'float-water',\n        frames: scene.anims.generateFrameNumbers('float-water', { start: 0, end: 9, first: 0 }),\n        frameRate: 16\n    });\n    scene.anims.create({\n        key: 'float-water-wave',\n        frames: scene.anims.generateFrameNumbers('float-water', { start: 9, end: 18 }),\n        frameRate: 16\n    });\n    scene.anims.create({\n        key: 'fish-icon',\n        frames: scene.anims.generateFrameNumbers('fish-icon', { start: 0, end: 1 }),\n        frameRate: 8,\n        repeat: -1\n    });\n    // backgrounds\n    scene.anims.create({\n        key: 'bg0',\n        frames: scene.anims.generateFrameNumbers('bg', { start: 0, end: 0 }),\n        frameRate: 1,\n    });\n    scene.anims.create({\n        key: 'bg1',\n        frames: scene.anims.generateFrameNumbers('bg', { start: 1, end: 1 }),\n        frameRate: 1,\n    });\n    scene.anims.create({\n        key: 'bg2',\n        frames: scene.anims.generateFrameNumbers('bg', { start: 2, end: 3 }),\n        repeat: -1,\n        frameRate: 2,\n    });\n    scene.anims.create({\n        key: 'bg3',\n        frames: scene.anims.generateFrameNumbers('bg', { start: 4, end: 4 }),\n        frameRate: 1,\n    });\n    scene.anims.create({\n        key: 'smoke',\n        repeat: -1,\n        frameRate: 4,\n        frames: scene.anims.generateFrameNames('ui', {\n            prefix: 'smoke-',\n            end: 2\n        })\n    });\n    scene.anims.create({\n        key: 'next',\n        repeat: -1,\n        frameRate: 2,\n        frames: scene.anims.generateFrameNames('ui', {\n            prefix: 'next-',\n            end: 1\n        })\n    });\n    scene.anims.create({\n        key: 'pc',\n        repeat: -1,\n        frameRate: 8,\n        frames: scene.anims.generateFrameNames('obj', {\n            prefix: 'pc-',\n            end: 2\n        })\n    });\n    scene.anims.create({\n        key: 'fishing',\n        repeat: -1,\n        frameRate: 2,\n        frames: scene.anims.generateFrameNames('minigame', {\n            prefix: 'fishing',\n            end: 2\n        })\n    });\n}\nfunction setLines(scene) {\n    // TODO 텍스트 데이터 생성 및 정리\n    let jsonText = scene.cache.json.get('text');\n    line.chapter = jsonText.chapter;\n    line.task = jsonText.task;\n    line.opening = jsonText.opening;\n    line.story = jsonText.story;\n}\n\n// TODO 동작 메서드\nconst lerp = (x, y, a) => x * (1 - a) + y * a;\nfunction Move(character, target, speed) {\n    game.scene.scenes[0].physics.moveToObject(character, target, speed);\n}\nfunction moveCharacter(character) {\n    let speed = 160;\n    if(character === 'engineer') speed = 80;\n    moveTargets[character].x = path.get(character)[mainConfig.pathCount[character]].x;\n    moveTargets[character].y = path.get(character)[mainConfig.pathCount[character]].y;\n    let next = path.get(character)[mainConfig.pathCount[character] + 1]?.x;\n    if(mainObject[character].anims.currentAnim.key !== character + '-run') mainObject[character].play(character + '-run');\n    mainObject[character].setFlipX(mainObject[character].x - moveTargets[character].x > 0);\n    if(next !== undefined) mainObject[character].setFlipX(mainObject[character].x - next > 0);\n    Move(mainObject[character], moveTargets[character], speed);\n}\nfunction moveToPoint(character, x, y, withPath){\n    if(character === 'player'){\n        mainConfig.playerMovable = false;\n    }\n    mainConfig.pathCount[character] = 1;\n    let newPath = (withPath) ? maps.navMesh.findPath(mainObject[character], { x: x, y: y }) : [{ x: mainObject[character].x, y: mainObject[character].y }, { x: x, y: y }];\n    path.set(character, newPath);\n    if(path.get(character) === null || path.get(character).length < 1) return;\n    moveCharacter(character);\n}\nfunction sheepStanby(sheep) {\n    sheep.setFlipX(true);\n    sheep.play('sheep-run');\n    Move(sheep, mainConfig.bridgePos.start, 100);\n}\nfunction sheepTalk(idx, sheep) {\n    clearTimeout(mainConfig.sheepBlinkTimer[idx]);\n    mainConfig.sheepBlinkTimer[idx] = setTimeout(function () {\n        if(sheep.anims.currentAnim.key === 'sheep-stand') sheep.play('sheep-talk');\n    }, 1600 + Math.round(Math.random() * 3200));\n}\nfunction jumpTo(jumper, target, action) {\n    if(jumper === undefined) return;\n    mainConfig.bridgeJumpingNow = true;\n    let scene = game.scene.scenes[0];\n    let a = jumper;\n    let b = target;\n    let path = [];\n    path[0] = {x: a.x, y: a.y};\n    path[1] = {x: lerp(a.x, b.x, 0.5) , y: lerp(a.y, b.y - 60, 0.5)}\n    path[2] = {x: b.x, y: b.y + 20}\n    a.setFlipX(a.x > b.x);\n    if(a === mainObject.player){\n        if(a.anims.currentAnim.key !== 'player-jump') a.play('player-jump');\n    }\n    else if(a === mainObject.dom){\n        if(a.anims.currentAnim.key !== 'dom-jump') a.play('dom-jump');\n    }\n    else {\n        if(a.anims.currentAnim.key !== 'sheep-jump') a.play('sheep-jump');\n        let idx = mainObject.sheeps.findIndex((obj) => a === obj);\n        sheepTalk(idx, a);\n    }\n    scene.tweens.add({\n        targets: a,\n        x: path[2].x,\n        duration: 600,\n        ease: Phaser.Math.Easing.Linear\n    });\n    scene.tweens.add({\n        targets: a,\n        y: path[1].y,\n        duration: 300,\n        ease: Phaser.Math.Easing.Quadratic.Out,\n        onComplete: function () {\n            scene.tweens.add({\n                targets: a,\n                y: path[2].y,\n                duration: 300,\n                ease: Phaser.Math.Easing.Quadratic.In,\n                onComplete: function () {\n                    mainConfig.bridgeJumpingNow = false;\n                    action();\n                }\n            });\n        }\n    });\n}\nfunction fishingCastFloat(power) {\n    // 낚시찌 던지기\n    const scene = game.scene.scenes[0];\n    for (let i = 0; i < mainConfig.fishFloatTween.length; i++) {\n        mainConfig.fishFloatTween[i].stop();\n    }\n    ui.fishingFloat.setVisible(true);\n    // 찌 출발위치\n    ui.fishingFloat.setPosition(120, display.centerH);\n    let target = {x: 180 + Math.round(power), y: 400};\n    const path = [];\n    path[0] = {x: ui.fishingFloat.x, y: ui.fishingFloat.y};\n    path[1] = {x: lerp(ui.fishingFloat.x, target.x, 0.85) , y: lerp(ui.fishingFloat.y - 160 - Math.round(power * 0.5), target.y - 160 - Math.round(power * 0.5), 0.5)};\n    path[2] = {x: target.x, y: target.y};\n    let speed = 1600 + Math.round(power)\n    mainConfig.fishFloatTween[0] = scene.tweens.add({\n        targets: ui.fishingFloat,\n        x: path[2].x,\n        duration: speed,\n        ease: Phaser.Math.Easing.Linear\n    });\n    mainConfig.fishFloatTween[1] = scene.tweens.add({\n        targets: ui.fishingFloat,\n        y: path[1].y,\n        duration: speed * 0.5,\n        ease: Phaser.Math.Easing.Quadratic.Out,\n        onComplete: function () {\n            mainConfig.fishFloatTween[2] = scene.tweens.add({\n                targets: ui.fishingFloat,\n                y: path[2].y,\n                duration: speed * 0.5,\n                ease: Phaser.Math.Easing.Quartic.In,\n                onComplete: function () {\n                    ui.floatWater.setPosition(target.x, target.y);\n                    ui.floatWater.setVisible(true);\n                    ui.floatWater.play('float-water');\n                    // 찌 물에 떨어짐\n                    // 낚시 시작\n                    startBite();\n                }\n            });\n        }\n    });\n}\nfunction path_log() {\n    debug.graphics.clear();\n    if(path.get('player') === null) {\n        return;\n    }\n    let line = new Phaser.Curves.Path(mainObject.player.x, mainObject.player.y);\n    for (let i = 0; i < path.get('player').length; i++)\n    {\n        line.lineTo(path.get('player')[i].x, path.get('player')[i].y);\n        debug.graphics.fillRect(path.get('player')[i].x - 4, path.get('player')[i].y - 4, 8, 8);\n    }\n    debug.graphics.lineStyle(1, 0xff0000, 1);\n    line.draw(debug.graphics);\n}\nfunction RandomPlusMinus() {\n    return (Math.random() > 0.5) ? 1 : -1;\n}\nconst getRandomInt = function (max) {\n    return RandomPlusMinus() * Math.round(Math.random() * max);\n}\nfunction RandomizePos(obj, x, y, min, max) {\n    obj.x = x + min + Math.random() * max * RandomPlusMinus();\n    obj.y = y + min + Math.random() * max * RandomPlusMinus();\n}\nfunction shakeObject(obj, max, speed, time) {\n    if(timer.shaker !== undefined) return;\n    const x = obj.x;\n    const y = obj.y;\n    setTimeout(()=> {\n        clearTimeout(timer.shaker);\n        timer.shaker = undefined;\n        obj.x = x;\n        obj.y = y;\n    }, time);\n    repeat();\n    function repeat() {\n        RandomizePos(obj, x, y, 0, max);\n        timer.shaker = setTimeout(repeat, speed);\n    }\n}\nfunction typewriteText(object, txt, speed) {\n    eventByIndex();\n    if(txt === undefined) return;\n    game.scene.scenes[0].time.removeEvent(event.type);\n    const length = txt.length\n    // 타이핑 도중에 재실행\n    if(event.typing === true){\n        event.typing = false;\n        object.text = txt;\n        status.index++;\n    }\n    else {\n        object.text = '';\n        let i = 0;\n        event.type = game.scene.scenes[0].time.addEvent({\n            callback: () => {\n                object.text += txt[i]\n                ++i\n                if(i < length){\n                    event.typing = true;\n                }\n                else {\n                    // 타이핑이 끝나고 실행\n                    event.typing = false;\n                    object.text = txt;\n                    status.index++;\n                }\n            },\n            repeat: length - 1,\n            delay: speed\n        })\n    }\n}\nfunction keyboardAction(key) {\n    if(mainConfig.clear[0]) return;\n    if(key < 10){\n        if(ui.pcInfo.length === 4) return;\n        ui.pcInfo += '' + key;\n        ui.pcDown.setVisible(false);\n    }\n    if(key === 'esc-'){\n        ui.pcInfo = '';\n        ui.pcDown.setVisible(false);\n    }\n    if(key === 'danger-'){\n        ui.pcInfo = '';\n        ui.pcDown.setVisible(true);\n    }\n    if(key === 'enter-'){\n        if(ui.pcDown.visible === true){\n            pcShutDown('danger');\n        }\n        else {\n            if(ui.pcInfo.length === 4){\n                if(ui.pcInfo === '1234'){\n                    pcShutDown('1234');\n                }\n                else if(ui.pcInfo === '0000'){\n                    pcShutDown('0000');\n                }\n                else {\n                    for (let i = 0; i < 4; i++) {\n                        shakeObject(ui.pcPw, 10, 10, 240);\n                        setTimeout(function () {\n                            ui.pcInfo = '';\n                            for (let i = 0; i < 4; i++) {\n                                ui.pcPwList[i].setVisible(false);\n                            }\n                        }, 420);\n                    }\n                }\n            }\n        }\n    }\n    for (let i = 0; i < 4; i++) {\n        ui.pcPwList[i].setVisible(false);\n    }\n    for (let i = 0; i < ui.pcInfo.length; i++) {\n        ui.pcPwList[i].setVisible(true);\n    }\n}\nfunction pcShutDown(way) {\n    // PC 미니게임 종료 후 결과에 따라 대사 변경\n    const newline = new Map();\n    newline.set('1234', \"[폰 왈도 노이만 3세]\\n어떻게 비밀번호를 알아냈지?!\\n천재가 분명해! 자네..\")\n        .set('0000', \"[폰 왈도 노이만 3세]\\n초기화 패스워드 0000이라..자네..\\n나랑 일해볼 생각 없나..?\")\n        .set('power', \"[폰 왈도 노이만 3세]\\n파워를 직접적으로 차단한다라..\\n자네.. 컴퓨터를 좀 아는군?\")\n        .set('danger', \"[폰 왈도 노이만 3세]\\n그 버튼은 무서워서 단 한번도\\n못 눌러봤는데.. 대담한 친구로군..\")\n        .set('break', \"[폰 왈도 노이만 3세]\\n아니..커..컴퓨터가..\\n과격한 친구로군.. 어쨋든 오작동은\\n멈췄으니.. 성공했다고 봐야겠어.\");\n    const reward = new Map();\n    // 씨앗 리워드 결정\n    reward.set('1234', 3)\n        .set('0000', 4)\n        .set('power', 5)\n        .set('danger', 1)\n        .set('break', 2);\n    mainConfig.reward[0] = reward.get(way);\n    line.story[1][14] = newline.get(way);\n    let scene = game.scene.scenes[0];\n    mainConfig.clear[0] = true;\n    ui.pcOff.setVisible(true);\n    scene.tweens.addCounter({\n        from: 255,\n        to: 0,\n        duration: 1800,\n        ease: Phaser.Math.Easing.Quintic.In,\n        onUpdate: function (tween)\n        {\n            const value = Math.floor(tween.getValue());\n            ui.pcOff.setFillStyle(Phaser.Display.Color.GetColor(value, value, value));\n        },\n        onComplete: function () {\n            console.log('pc shut down');\n            setTask(false);\n            scene.tweens.add({\n                targets: ui.gameGroup,\n                y: -800,\n                duration: 1600,\n                ease: Phaser.Math.Easing.Quintic.In,\n                onComplete: function () {\n                    ui.gameGroup.setVisible(false);\n                    ui.skip.setVisible(true);\n                    ui.dialogGroup.setVisible(true);\n                    dialog();\n                }\n            });\n        }\n    });\n}\nfunction setReward(bool, count) {\n    // 씨앗을 받았다 메세지 UI 출력\n    // bool: 켜기 끄기\n    // count: 씨앗 갯수\n\n    if(bool){\n        setTimeout(() => ui.skip.setVisible(true), 400);\n        ui.rewardGroup.setVisible(true);\n        ui.rewardMsg.text = '씨앗을 ' + count + '개 받았다!'\n        mainConfig.seedNum += count;\n    }\n    else ui.rewardGroup.setVisible(false);\n}\nfunction setGameScenes() {\n    // 챕터에 따라 미니게임 씬 정렬\n    if(status.chapterIdx < 1) return;\n    for (let i = 0; i < ui.gameScene.length; i++) {\n        ui.gameScene[i].setVisible(false);\n    }\n    ui.gameGroup.y = 840;\n    ui.gameScene[status.chapterIdx - 1].setVisible(true);\n}\nfunction fishingFinish(success) {\n    // 낚시 완료\n    // success: 성공 여부\n    console.log('fishing ' , (success) ? 'success' : 'failed');\n    let scene = game.scene.scenes[0];\n\n    mainConfig.fishingNow = false;\n    mainConfig.fishWait = false;\n    ui.fishIcon.body.setGravityY(0);\n    ui.fishIcon.body.setVelocity(0, 0);\n    ui.fishingBar.body.setGravityY(0);\n    ui.fishingBar.body.setVelocity(0, 0);\n    ui.fishingBar.setPosition(display.centerW, display.centerH);\n    ui.fishIcon.y = display.centerH - 80;\n    setVisibleObjects(false, [ui.fishingBar, ui.fishingGroup]);\n    if(success){\n        setTask(false);\n        ui.gameGroup.setVisible(true);\n        scene.tweens.add({\n            targets: ui.gameGroup,\n            y: -860,\n            duration: 2000,\n            ease: Phaser.Math.Easing.Quintic.In,\n        });\n    }\n    else {\n        setTimeout(function () {\n            ui.fishingFloat.setVisible(false);\n        }, 200);\n    }\n}\nfunction startFishing() {\n    console.log('start fishing');\n    setVisibleObjects(true, [ui.fishingBar, ui.fishingGroup]);\n    ui.task.text = '낚싯바늘 영역 안에 위치시키자';\n    createFloatWave(ui.fishingFloat);\n    ui.fishingBar.body.setGravityY(800);\n    fishMove();\n    function fishMove() {\n        ui.fishIcon.body.setGravityY(getRandomInt(400));\n        setTimeout(function () {\n            if(!mainConfig.fishingNow) return;\n            fishMove();\n        }, 200);\n    }\n}\nfunction startBite() {\n    clearTimeout(mainConfig.fishingFailTimer);\n    ui.task.text = '물고기가 물때까지 기다리자';\n    ui.fishingFloat.setTexture('ui', 'float-down').setOrigin(0.5);\n    mainConfig.fishingRodOn = true;\n    //let waitFish = 2400 + Math.round(Math.random() * 8000);\n    let waitFish = 1600 + Math.round(Math.random() * 2400);\n    let waitFail = 2400 + Math.round(Math.random() * 2400);\n    // 물고기 대기\n    mainConfig.fishingTimer = setTimeout(function () {\n        mainConfig.fishWait = true;\n        // 입질 시작\n        ui.task.text = '한번 더 눌러서 낚시를 시작하자';\n        createFloatWave(ui.fishingFloat);\n        // 무반응할 경우 낚시 실패\n        mainConfig.fishingFailTimer = setTimeout(function () {\n            mainConfig.fishWait = false;\n            startBite();\n        }, waitFail);\n    }, waitFish);\n}\nfunction createFloatWave(target) {\n    // 낚시찌 위치에 물결 재생\n    let wave =  ui.floatWaterWave.get();\n    if (!wave) return;\n    ui.fishingEffect.add(wave);\n    wave.setScale(3);\n    wave.setPosition(target.x, target.y);\n    wave.play('float-water-wave');\n    wave.on('animationcomplete', function () {\n        wave.destroy();\n        if(!mainConfig.fishWait) return;\n        setTimeout(function () {\n            createFloatWave(target);\n        }, 800);\n    });\n}\nfunction createParts(x, y, vx, vy) {\n    // pc 부수기\n    if(mainConfig.clear[0]) return;\n    mainConfig.pcCrackCount++;\n    if(mainConfig.pcCrackCount === 10) {\n        ui.pc.setTexture('minigame', 'pc1');\n    }\n    else if(mainConfig.pcCrackCount > 20 && mainConfig.pcCrackCount < 35){\n        ui.pc.setTexture('minigame', 'pc2');\n        ui.pcErr.y =ui.pcOff.y= 202;\n    }\n    else if(mainConfig.pcCrackCount > 35 && mainConfig.pcCrackCount < 60){\n        ui.pc.setTexture('minigame', 'pc3');\n        ui.pcErr.y =ui.pcOff.y= 210;\n    }\n    else if(mainConfig.pcCrackCount > 60){\n        pcShutDown('break');\n        return;\n    }\n    let part =  ui.pcParts.get();\n    if (!part) return;\n    ui.effectGroup.add(part);\n    let r = Math.random();\n    if(r > 0 && 0.25 < r) part.setTexture('keyboard', 'parts0');\n    else if(r > 0.25 && 0.5 < r) part.setTexture('keyboard', 'parts1');\n    else if(r > 0.5 && 0.75 < r) part.setTexture('keyboard', 'parts2');\n    else part.setTexture('keyboard', 'parts3');\n    part\n        .setOrigin(0.5)\n        .setScale(2)\n        .setGravityY(0)\n        .setGravityY(800)\n        .enableBody(true, x, y, true, true)\n        .setVelocity(vx, vy)\n        .setAngularVelocity(400);\n\n}\nfunction selectBridge(index, bridge) {\n    for (let i = 0; i < mainObject.sheeps.length; i++) {\n        if(mainObject.sheeps[i].body.speed > 0) return;\n    }\n    if(mainConfig.bridgeJumpingNow) return;\n    let livingSheep = mainObject.sheeps[0];\n    let nextSheep = mainObject.sheeps[1];\n    if(Math.floor(index / 2) !== mainConfig.bridgeSelection) return;\n\n    if(index === mainConfig.bridgeAnswer[mainConfig.bridgeSelection]){\n        // 생존\n        jumpTo(livingSheep, bridge, function () {\n            ui.bridges[mainConfig.bridgeFail[mainConfig.bridgeSelection]].play('stone' + mainConfig.bridgeFail[mainConfig.bridgeSelection] + '-out');\n            livingSheep.play('sheep-stand');\n            nextSheep = mainObject.sheeps[mainConfig.bridgeSelection - mainConfig.livingSheep + 1];\n            if(nextSheep !== undefined) {\n                if(nextSheep.y < ui.bridges[0].y) sheepStanby(nextSheep);\n            }\n            if(mainConfig.livingSheep > 0) {\n                mainConfig.sheepJump = function () {\n                    let followCount = 0;\n                    followUp(nextSheep);\n                    function followUp(sheep) {\n                        jumpTo(sheep, ui.bridges[mainConfig.bridgeAnswer[followCount]], function () {\n                            sheep.play('sheep-stand');\n                            followCount++;\n                            if (followCount === mainConfig.livingSheep) return;\n                            followUp(sheep);\n                        });\n                        nextSheep = mainObject.sheeps[mainConfig.bridgeSelection - mainConfig.livingSheep + 1];\n                        if(nextSheep !== undefined) {\n                            sheepStanby(nextSheep);\n                            mainConfig.sheepJump = function () {\n                                jumpTo(nextSheep, ui.bridges[mainConfig.bridgeAnswer[0]], function () {\n                                    nextSheep.play('sheep-stand');\n                                });\n                            }\n                        }\n                    }\n                }\n            }\n            for (let i = 0; i < mainConfig.bridgeSelection; i++) {\n                jumpTo(mainObject.sheeps[i + 1], ui.bridges[mainConfig.bridgeAnswer[mainConfig.bridgeSelection - 1 - i]], function () {\n                    mainObject.sheeps[i + 1].play('sheep-stand');\n                });\n            }\n            mainConfig.bridgeSelection++;\n            finishJump(true);\n        })\n    }\n    else {\n        // 실패\n        jumpTo(livingSheep, bridge, function () {\n            // livingSheep 점프 후 실패 후 제거\n            ui.bridges[mainConfig.bridgeFail[mainConfig.bridgeSelection]].play('stone' + mainConfig.bridgeFail[mainConfig.bridgeSelection] + '-out');\n            mainConfig.livingSheep++;\n            livingSheep.setGravityX(-600);\n            livingSheep.setVelocity(80, (mainConfig.bridgeSelection > 2) ? -40 : 60);\n            livingSheep.play('sheep-dead');\n            livingSheep.setFlipX(false);\n            mainConfig.deadSheep.push(livingSheep);\n            mainObject.sheeps.shift();\n            // 남은 양 점프\n            nextSheep = mainObject.sheeps[mainConfig.bridgeSelection - mainConfig.livingSheep + 1];\n            if(nextSheep !== undefined) {\n                if(nextSheep.y < ui.bridges[0].y) sheepStanby(nextSheep);\n                mainConfig.sheepJump = function () {\n                    let followCount = 0;\n                    followUp(nextSheep);\n                    function followUp(sheep) {\n                        jumpTo(sheep, ui.bridges[mainConfig.bridgeAnswer[followCount]], function () {\n                            sheep.play('sheep-stand');\n                            followCount++;\n                            if(followCount === mainConfig.livingSheep) return;\n                            followUp(sheep);\n                        });\n                        nextSheep = mainObject.sheeps[mainConfig.bridgeSelection - mainConfig.livingSheep + 1];\n                        if(nextSheep !== undefined) {\n                            if(nextSheep.y < ui.bridges[0].y) sheepStanby(nextSheep);\n                            mainConfig.sheepJump = function () {\n                                jumpTo(nextSheep, ui.bridges[mainConfig.bridgeAnswer[0]], function () {\n                                    nextSheep.play('sheep-stand');\n                                });\n                                let toNext = mainObject.sheeps[mainConfig.bridgeSelection - mainConfig.livingSheep + 2];\n                                if(toNext !== undefined){\n                                    sheepStanby(toNext);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            for (let i = 0; i < mainConfig.bridgeSelection; i++) {\n                jumpTo(mainObject.sheeps[i], ui.bridges[mainConfig.bridgeAnswer[mainConfig.bridgeSelection - 1 - i]], function () {\n                    mainObject.sheeps[i].play('sheep-stand');\n                    jumpTo(mainObject.sheeps[i], ui.bridges[mainConfig.bridgeAnswer[mainConfig.bridgeSelection - 1 - i]], function () {\n                        mainObject.sheeps[i].play('sheep-stand');\n                    })\n                })\n            }\n            mainConfig.bridgeSelection++;\n            finishJump(false);\n        });\n    }\n    function finishJump(success) {\n        let count = (success) ? 4 : 3;\n        if(mainConfig.bridgeSelection === 5){\n            // 퀘스트 완료\n            let left = 0;\n            f();\n            function f() {\n                for (let i = 0; i < mainObject.sheeps.length; i++) {\n                    let target = ui.bridges[mainConfig.bridgeAnswer[count - i + left]];\n                    if(target === undefined) {\n                        target = mainConfig.bridgePos.end;\n                    }\n                    if(success){\n                        if(i === 0) target = mainConfig.bridgePos.end;\n                    }\n                    if(mainObject.sheeps[i].y < mainConfig.bridgePos.end.y){\n                        jumpTo(mainObject.sheeps[i], target, function () {\n                            mainObject.sheeps[i].play('sheep-run');\n                            let lastPos = mainConfig.sheepEndPos[i];\n                            mainConfig.sheepLast[i] = lastPos;\n                            Move(mainObject.sheeps[i], lastPos, 100);\n                            mainObject.sheeps[i].setFlipX(mainObject.sheeps[i].x > lastPos.x);\n                            if(i === mainObject.sheeps.length - 1){\n                                if(left < mainObject.sheeps.length + 1){\n                                    left++;\n                                    f();\n                                }\n                            }\n                        });\n                    }\n                }\n            }\n            if(!success && mainConfig.deadSheep.length > 4){\n                setTimeout(function () {\n                    sheepFinish();\n                }, 1000);\n            }\n        }\n    }\n\n    // 인터렉션 설정 및 퀘스트 재설정\n    ui.bridges[mainConfig.bridgeAnswer[mainConfig.bridgeSelection]].disableInteractive();\n    ui.bridges[mainConfig.bridgeFail[mainConfig.bridgeSelection]].disableInteractive();\n    const number = {\n        0: '첫 번째' ,\n        1: '두 번째' ,\n        2: '세 번째' ,\n        3: '네 번째' ,\n    }\n    let korNum = number[mainConfig.bridgeSelection + 1];\n    if(korNum === undefined) korNum = '마지막';\n    ui.task.text = korNum + \" 다리를 선택하자\";\n}\nfunction sheepFinish() {\n    for (let i = 0; i < mainObject.sheeps.length; i++) {\n        sheepTalk(i, mainObject.sheeps[i]);\n    }\n    setTask(false);\n    mainConfig.clear[1] = true;\n    let dead = mainConfig.deadSheep.length;\n    const newLine = {13: new Map(), 14: new Map(), 15: new Map(), 16: null, 17: null};\n    newLine[13].set(5, \"[양치기 소년]\\n........\");\n    newLine[13].set(4, \"[양치기 소년]\\n아아.. 단 한마리만 건넜어..\");\n    newLine[13].set(3, \"[양치기 소년]\\n하하.. 내 양의 반 이상이...\");\n    newLine[13].set(2, \"[양치기 소년]\\n음.. 그래도 양들이 세마리나\\n강을 건넜네..\");\n    newLine[13].set(1, \"[양치기 소년]\\n오호.. 너 꽤나 잘 맞추는데?\");\n    newLine[13].set(0, \"[양치기 소년]\\n대단해..전부 맞췄어!!\");\n\n    newLine[14].set(5, \"[아무 말도 하지 않는다]\");\n    newLine[14].set(4, \"[먼 산을 바라본다]\");\n    newLine[14].set(3, \"[미안한 표정으로 쳐다본다]\");\n    newLine[14].set(2, \"[양치기를 쳐다본다]\");\n    newLine[14].set(1, \"[미소를 짓는다]\");\n    newLine[14].set(0, \"[뿌듯한 얼굴로 양치기를 본다]\");\n\n    newLine[15].set(5, \"[양치기 소년]\\n어쩔 수 없지.. 애초에 내가 선택을\\n너에게 부탁했잖아..\");\n    newLine[15].set(4, \"[양치기 소년]\\n아니 괘..괜찮아..\\n한 마리라도 남았으니 다행이지..\");\n    newLine[15].set(3, \"[양치기 소년]\\n어쩔 수 없지 뭐..\\n양을 더 많이 빠트린 적도 있으니까..\");\n    newLine[15].set(2, \"[양치기 소년]\\n이 정도면 나보단 낫네..\\n어차피 확률은 반반이였잖아 그치?\");\n    newLine[15].set(1, \"[양치기 소년]\\n뭔가 구별할 수 있는 방법이\\n있는거야? 내 눈엔 똑같은데..\");\n    newLine[15].set(0, \"[양치기 소년]\\n진짜 어떻게 한 거야?!\\n나한테도 방법 좀 알려달라고..\");\n\n    newLine[16] = \"[양치기 소년]\\n떠밀려간 양은 너무 걱정하지마.\\n강 하류는 얕아서 아마 괜찮을거야.\"\n    if(dead === 0) newLine[16] = \"[양치기 소년]자 이제 저 징검다리를 지나서\\n건너가면 돼.\"\n\n    newLine[17] = \"[양치기 소년]\\n내가 데리러 갈테니 넌 마저\\n건너가도록 하라구.\"\n    if(dead === 0) newLine[17] = \"[양치기 소년]\\n난 이쪽에 남은 짐을 챙겨서 갈테니\\n걱정말라구.\"\n\n    line.story[status.chapterIdx][13] = newLine[13].get(dead);\n    line.story[status.chapterIdx][14] = newLine[14].get(dead);\n    line.story[status.chapterIdx][15] = newLine[15].get(dead);\n    line.story[status.chapterIdx][16] = newLine[16];\n    line.story[status.chapterIdx][17] = newLine[17];\n\n    mainConfig.reward[1] = 6-dead;\n\n    ui.skip.setVisible(true);\n    ui.dialogGroup.setVisible(true);\n    dialog();\n}\n// TODO 이벤트 메서드\nfunction skip() {\n    if(status.scene === 'title'){\n        if(mainConfig.debugMode){\n            mainObject.TitleEmitter.stop();\n            mainObject.TitleEmitter.setVisible(false);\n            ui.title.setVisible(false);\n            ui.white.setVisible(false);\n            chapterTitle(mainConfig.debugMode);\n            ui.background.setVisible(false);\n            ui.dark.setVisible(true);\n            return;\n        }\n        status.scene = 'opening';\n        mainObject.TitleEmitter.setGravityX(2000);\n        mainObject.TitleEmitter.stop();\n        game.scene.scenes[0].tweens.add({\n            targets: ui.title,\n            y: -120,\n            duration: 800,\n            ease: Phaser.Math.Easing.Quintic.In,\n            onComplete: function () {\n            }\n        });\n        game.scene.scenes[0].tweens.add({\n            targets: ui.white,\n            y: -display.height,\n            duration: 1200,\n            ease: Phaser.Math.Easing.Quintic.In,\n            onComplete: function () {\n                ui.title.setVisible(false);\n                ui.largeText.setVisible(true);\n                ui.largeText.text = line.opening[status.index];\n                shakeObject(ui.largeText, 20, 20, 240);\n                status.index++;\n            }\n        });\n    }\n    else if(status.scene === 'opening'){\n        // 마지막 줄에서 챕터 씬으로 전환\n        if(line.opening[status.index] === undefined) {\n            if(mainConfig.titleFadeOut !== null) return;\n            chapterTitle(mainConfig.debugMode);\n        }\n        else {\n            if(ui.title.visible) return;\n            ui.largeText.text = line.opening[status.index];\n            shakeObject(ui.largeText, 20, 20, 240);\n            status.index++;\n        }\n    }\n    else if(status.scene === 'chapter'){\n        if(ui.rewardGroup.visible === true){\n            setReward(false, null);\n            ui.dialogGroup.setVisible(true);\n        }\n        dialog();\n    }\n}\nfunction dialog() {\n    if(line.story[status.chapterIdx][status.index] === '*close*'){\n        mainObject.dom.play('dom-stand');\n        event.typing = false;\n        ui.dialogGroup.setVisible(false);\n        ui.skip.setVisible(false);\n        eventByIndex();\n        status.index++;\n    }\n    else {\n        typewriteText(ui.dialog, line.story[status.chapterIdx][status.index], 60);\n    }\n}\n// TODO 인덱스 메서드\nfunction eventByIndex(){\n    let chapter = status.chapterIdx;\n    let index = status.index;\n    let scene = game.scene.scenes[0];\n\n    if(chapter === 0){\n        if(index === 4){\n            mainObject.player.play('player-seek');\n        }\n        if(index === 6){\n            setTask(true);\n            mainObject.player.play('player-stand');\n            let markOn = setTimeout(function () {\n                if(mainObject.dom.visible) {\n                    clearTimeout(markOn);\n                    markOn = undefined;\n                    return;\n                }\n                ui.mark.setVisible(true);\n            }, 3200);\n            setTimeout(() => mainConfig.playerMovable = true, 0);\n            let col = scene.physics.add.overlap(mainObject.player, mainObject.dom, function () {\n                col.active = false;\n                ui.mark.setVisible(false);\n                setVisibleObjects(true, [mainObject.dom, ui.skip, ui.dialogGroup]);\n                moveToPoint('player', mainObject.dom.x + 60, mainObject.dom.y, true);\n                mainConfig.lookAt.player = mainObject.dom;\n                mainConfig.lookAt.dom = mainObject.player;\n                dialog();\n                mainObject.dom.play('dom-talk');\n                setTask(false);\n            }, null, this);\n        }\n        if(index === 12){\n            setTask(true);\n            setTimeout(() => mainConfig.playerMovable = true, 20);\n            moveToPoint('dom', display.centerW, display.centerH + 120);\n            mainConfig.moveFinishedEvent.player = function () {\n                let col = scene.physics.add.overlap(mainObject.player, mainObject.dom, function () {\n                    col.active = false;\n                    setTask(false);\n                    setVisibleObjects(true, [ui.skip, ui.dialogGroup]);\n                    mainConfig.playerMovable = false;\n                    mainConfig.lookAt.player = mainObject.dom;\n                    mainConfig.lookAt.dom = mainObject.player;\n                    moveToPoint('player', mainObject.dom.x - 60, mainObject.dom.y, true);\n                    dialog();\n                    mainObject.dom.play('dom-talk');\n                }, null, this);\n            }\n        }\n        if(index === 19){\n            // 다음 스테이지로\n            setTask(true);\n            setTimeout(() => mainConfig.playerMovable = true, 0);\n            setTimeout(() => mainConfig.domFollow = true, 0);\n            finishChapter({x: display.centerW, y: display.height + 180});\n        }\n    }\n    else if(chapter === 1) {\n        if (index === 3) {\n            setTask(true);\n            moveEnable();\n            let col = scene.physics.add.overlap(mainObject.player, mainObject.engineer, function () {\n                col.active = false;\n                setTask(false);\n                mainConfig.playerMovable = false;\n                mainConfig.domFollow = false;\n                mainConfig.lookAt.player = mainObject.engineer;\n                mainConfig.lookAt.engineer = mainObject.player;\n                moveToPoint('player', mainObject.engineer.x + 60, mainObject.engineer.y + 20, true);\n                moveToPoint('dom', mainObject.engineer.x - 60, mainObject.engineer.y, true);\n                if(!ui.dialogGroup.visible) {\n                    ui.skip.setVisible(true);\n                    ui.dialogGroup.setVisible(true);\n                }\n                dialog();\n                mainObject.engineer.play('engineer-talk');\n            }, null, this);\n        }\n        else if (index === 7) {\n            mainObject.engineer.play('engineer-stand');\n        }\n        else if (index === 8) {\n            mainObject.engineer.play('engineer-talk');\n        }\n        else if (index === 13){\n            setTask(true);\n            ui.gameGroup.y = 600;\n            ui.gameGroup.setVisible(true);\n            scene.tweens.add({\n                targets: ui.gameGroup,\n                y: 0,\n                duration: 2000,\n                ease: Phaser.Math.Easing.Quintic.Out\n            });\n        }\n        else if (index === 16){\n            mainObject.engineer.play('engineer-stand');\n            setTimeout(function () {\n                setReward(true, mainConfig.reward[0]);\n            }, 400);\n        }\n        else if (index === 17) mainObject.engineer.play('engineer-talk');\n        else if (index === 19){\n            // 다음 스테이지로\n            setTask(true);\n            repeat();\n            function repeat() {\n                if(status.chapterIdx !== 1) {\n                    return;\n                }\n                moveToPoint('engineer', 288, 466, true);\n                mainConfig.moveFinishedEvent.engineer = function () {\n                    mainObject.engineer.play('engineer-type');\n                    mainObject.engineer.setFlipX(true);\n                    let n = setTimeout(function () {\n                        if(status.chapterIdx !== 1) {\n                            clearTimeout(n);\n                            return;\n                        }\n                        moveToPoint('engineer', 104, 506, true);\n                        mainConfig.moveFinishedEvent.engineer = function () {\n                            mainObject.engineer.play('engineer-type');\n                            mainObject.engineer.setFlipX(false);\n                            setTimeout(function () {\n                                repeat();\n                            }, 2400 + Math.round(Math.random() * 8000));\n                        };\n                    }, 2400 + Math.round(Math.random() * 8000));\n                };\n            }\n            moveEnable();\n            finishChapter({x: display.centerW, y: display.height + 180});\n        }\n    }\n    else if(chapter === 2) {\n        if (index === 4) {\n            setTask(true);\n            moveEnable();\n            let col = scene.physics.add.overlap(mainObject.player, mainObject.man, function () {\n                col.active = false;\n                setTask(false);\n                mainConfig.playerMovable = false;\n                mainConfig.domFollow = false;\n                mainConfig.lookAt.player = mainObject.man;\n                mainConfig.lookAt.man = mainObject.player;\n                mainConfig.lookAt.dom = mainObject.man;\n                moveToPoint('player', mainObject.man.x - 60, mainObject.man.y, true);\n                moveToPoint('dom', mainObject.man.x + 40, mainObject.man.y - 20, true);\n                if(!ui.dialogGroup.visible) {\n                    ui.skip.setVisible(true);\n                    ui.dialogGroup.setVisible(true);\n                }\n                dialog();\n                mainObject.man.play('man-talk');\n            }, null, this);\n        }\n        else if (index === 6){\n            mainObject.man.play('man-stand');\n        }\n        else if (index === 7){\n            mainObject.man.play('man-talk');\n        }\n        else if (index === 12) {\n            // 양건너기 시작\n            sheepStanby(mainObject.sheeps[0]);\n            mainObject.man.play('man-stand');\n            mainObject.man.setFlipX(true);\n            mainObject.player.setFlipX(true);\n            ui.bridges.forEach(function (bridge) {\n                bridge.setInteractive();\n            });\n            setTask(true);\n        }\n        else if (index === 13){\n            mainObject.man.setFlipX(false);\n            mainObject.man.play('man-talk');\n        }\n        else if (index === 14){\n            mainObject.man.play('man-stand');\n        }\n        else if (index === 15){\n            mainObject.man.play('man-talk');\n        }\n        else if (index === 18){\n            mainObject.man.play('man-stand');\n            setTimeout(function () {\n                setReward(true, mainConfig.reward[1]);\n            }, 400);\n        }\n        else if (index === 19){\n            mainObject.man.play('man-talk');\n        }\n        else if (index === 20){\n            mainObject.man.setFlipX(true);\n            mainObject.man.play('man-stand');\n            mainConfig.lookAt.player = null;\n            mainConfig.lookAt.dom = null;\n            moveToPoint('player', mainConfig.bridgePos.start.x, mainConfig.bridgePos.start.y, true);\n            moveToPoint('dom', mainConfig.bridgePos.start.x + 40, mainConfig.bridgePos.start.y, true);\n            mainConfig.moveFinishedEvent.player = function () {\n                let jumpCount = 0;\n                let jumpCountDom = 0;\n                playerJump();\n                function playerJump() {\n                    if(jumpCount === 1) DomJump();\n                    jumpTo(mainObject.player, ui.bridges[mainConfig.bridgeAnswer[jumpCount]], function () {\n                        if (jumpCount < 4) {\n                            mainObject.player.play('player-stand');\n                            jumpCount++;\n                            playerJump();\n                        }\n                        else {\n                            // 주인공 점프\n                            jumpTo(mainObject.player, mainConfig.bridgePos.end, function (){\n                                mainConfig.playerMovable = true;\n                                mainObject.player.play('player-stand');\n                                setTask(true);\n                                finishChapter({x: display.centerW, y: display.height + 180});\n                            })\n                        }\n                    })\n                }\n                function DomJump() {\n                    jumpTo(mainObject.dom, ui.bridges[mainConfig.bridgeAnswer[jumpCountDom]], function () {\n                        if (jumpCountDom < 4) {\n                            mainObject.dom.play('dom-stand');\n                            jumpCountDom++;\n                            DomJump();\n                        }\n                        else {\n                            jumpTo(mainObject.dom, {x: mainConfig.bridgePos.end.x -40, y: mainConfig.bridgePos.end.y}, function (){\n                                mainConfig.domFollow = true;\n                                mainObject.dom.play('dom-stand');\n                            })\n                        }\n                    })\n                }\n            }\n        }\n    }\n    else if(chapter === 3) {\n        if (index === 2) {\n            setTask(true);\n            moveEnable();\n            let col = scene.physics.add.overlap(mainObject.player, ui.fishmanPlace, function () {\n                col.active = false;\n                setTask(false);\n                mainConfig.playerMovable = false;\n                mainConfig.domFollow = false;\n                mainConfig.lookAt.player = mainObject.fishman;\n                mainConfig.lookAt.dom = mainObject.fishman;\n                moveToPoint('player', mainObject.fishman.x - 20, mainObject.fishman.y + 60, false);\n                moveToPoint('dom', mainObject.fishman.x - 40, mainObject.fishman.y + 80, false);\n                if(!ui.dialogGroup.visible) {\n                    ui.skip.setVisible(true);\n                    ui.dialogGroup.setVisible(true);\n                }\n                dialog();\n                mainObject.fishman.play('fishman-talk');\n            }, null, this);\n        }\n        else if(index === 5){\n            setTask(true);\n            ui.gameGroup.y = 600;\n            ui.gameGroup.setVisible(true);\n            scene.tweens.add({\n                targets: ui.gameGroup,\n                y: 0,\n                duration: 2000,\n                ease: Phaser.Math.Easing.Quintic.Out,\n            });\n        }\n    }\n}\nfunction finishChapter(pos) {\n    let scene = game.scene.scenes[0];\n    ui.next.setVisible(true);\n    let col = scene.physics.add.overlap(mainObject.player, ui.next, function () {\n        setTask(false);\n        console.log('to next stage');\n        status.chapterIdx++;\n        col.active = false;\n        mainConfig.domFollow = false;\n        ui.dark.setVisible(true).setAlpha(0);\n        moveToPoint('player', pos.x, pos.y, false);\n        moveToPoint('dom', pos.x, pos.y, false);\n        scene.tweens.add({\n            targets: ui.dark,\n            alpha: 1,\n            duration: 2000,\n            onComplete: () => chapterTitle(mainConfig.debugMode)\n        });\n    });\n}\nfunction moveEnable() {\n    setTimeout(function () {\n        mainObject.dom.play('dom-stand');\n        mainObject.player.play('player-stand');\n        mainConfig.playerMovable = true;\n        mainConfig.domFollow = true;\n    }, 0);\n}\nfunction setVisibleObjects(bool, arr) {\n    // 배열 오브젝트 모두 setVisible 실행\n    for (let i = 0; i < arr.length; i++) {\n        arr[i].setVisible(bool);\n    }\n}\nfunction moveFinished(character) {\n    // 이동 완료 후 바라보기\n    let name = '';\n    if(character === mainObject.player){\n        name = 'player';\n    }\n    else if(character === mainObject.dom){\n        name = 'dom';\n    }\n    else if(character === mainObject.engineer){\n        name = 'engineer';\n    }\n    if(mainConfig.moveFinishedEvent[name] !== null) {\n        mainConfig.moveFinishedEvent[name]();\n        mainConfig.moveFinishedEvent[name] = null;\n    }\n    if(mainConfig.playerMovable) return;\n    for(value in mainConfig.lookAt){\n        if(mainConfig.lookAt[value] !== null) {\n            mainObject[value].setFlipX(mainObject[value].x - mainConfig.lookAt[value].x > 0);\n        }\n    }\n}\nfunction setBackground(idx) {\n    ui.bg.play('bg' + idx);\n    for (let i = 0; i < maps.wallLayer.length; i++) {\n        maps.wallLayer[i].setVisible(false);\n    }\n    maps.wallLayer[idx].setVisible(true);\n}\n// TODO 씬 제어\nfunction chapterTitle(skip) {\n    ui.background.setVisible(true);\n    ui.dark.setVisible(false);\n    if(skip) {\n        // 디버그 씬 스킵\n        if(mainConfig.debugMode) {\n            if(mainConfig.debugModeChapter !== 0){\n                mainObject.dom.setVisible(true);\n                mainObject.particles.setVisible(false);\n            }\n        }\n        chapterStart(status.chapterIdx);\n        return;\n    }\n    let scene = game.scene.scenes[0];\n    ui.largeText.setAlpha(0);\n    ui.largeText.setVisible(true);\n    ui.largeText.text = line.chapter[status.chapterIdx];\n    mainConfig.titleFadeOut = scene.tweens.add({\n        targets: ui.largeText,\n        alpha: 1,\n        duration: 2400,\n        yoyo: true,\n        ease: Phaser.Math.Easing.Elastic.InOut,\n        onComplete: () => chapterStart(status.chapterIdx)\n    });\n\n    function chapterStart(chapterIdx) {\n        ui.next.setVisible(false);\n        ui.background.setVisible(false);\n        ui.dark.setVisible(true);\n        let scene = game.scene.scenes[0];\n        setGameScenes();\n        mainConfig.titleFadeOut = null;\n        status.scene = 'chapter';\n        status.index = 0;\n        status.taskIdx = 0;\n        console.log(status.scene, status.chapterIdx);\n        game.scene.scenes[0].tweens.add({\n            targets: ui.dark,\n            alpha: 0,\n            duration: 1200,\n            onComplete: () => ui.dark.setVisible(false)\n        });\n        ui.largeText.setVisible(false);\n        setBackground(chapterIdx);\n        if(chapterIdx === 0){\n            setVisibleObjects(true, [object.list[0], object.list[1], object.list[2], ui.smoke]);\n            zoomOut(mainConfig.debugMode);\n            function zoomOut(on) {\n                if(on){\n                    ui.dialogGroup.setVisible(true);\n                    dialog();\n                    ui.skip.setInteractive();\n                }\n                else {\n                    ui.skip.disableInteractive();\n                    ui.cam.zoom = 4;\n                    ui.cam.pan(mainObject.player.x, mainObject.player.y - 32, 1);\n                    setTimeout(function () {\n                        ui.cam.pan(display.centerW, display.centerH, 2800, Phaser.Math.Easing.Quintic.InOut, true);\n                        ui.cam.zoomTo(1, 2800, Phaser.Math.Easing.Quintic.InOut);\n                        ui.cam.on(Phaser.Cameras.Scene2D.Events.ZOOM_COMPLETE, () => {\n                            ui.dialogGroup.setVisible(true);\n                            dialog();\n                            ui.skip.setInteractive();\n                        });\n                    }, 400);\n                }\n            }\n        }\n        else if(chapterIdx === 1){\n            ui.skip.setVisible(false);\n            maps.navMesh.destroy();\n            maps.navMesh = scene.navMeshPlugin.buildMeshFromTiled(\"mesh\", maps.objectLayer[1], 12.5);\n            setVisibleObjects(false, [object.list[0], object.list[1], object.list[2], ui.smoke]);\n            setVisibleObjects(true, [object.list[3], object.list[4]]);\n            mainObject.particles.setVisible(false);\n            mainObject.engineer.setVisible(true);\n            mainObject.player.x = -16;\n            mainObject.player.y = 200;\n            mainObject.dom.x = -64;\n            mainObject.dom.y = 220;\n\n            moveToPoint('player', display.centerW + 30, 200, false);\n            moveToPoint('dom', display.centerW - 30, 200, false);\n            mainConfig.moveFinishedEvent.player = function () {\n                mainConfig.lookAt.player = mainObject.dom;\n                mainConfig.lookAt.dom = mainObject.player;\n                if(!ui.dialogGroup.visible) {\n                    ui.skip.setVisible(true);\n                    ui.dialogGroup.setVisible(true);\n                }\n                dialog();\n            }\n            mainConfig.moveFinishedEvent.dom = function () {\n                mainObject.dom.play('dom-talk');\n            }\n        }\n        else if(chapterIdx === 2){\n            maps.navMesh.destroy();\n            setVisibleObjects(false, [ui.skip, mainObject.engineer, object.list[3], object.list[4]]);\n            setVisibleObjects(true, [ui.bridge, mainObject.man]);\n            for (let i = 0; i < mainObject.sheeps.length; i++) {\n                mainObject.sheeps[i].setVisible(true);\n            }\n            maps.navMesh = scene.navMeshPlugin.buildMeshFromTiled(\"mesh\", maps.objectLayer[2], 12.5);\n            mainObject.player.x = mainObject.dom.x = display.centerW - 120;\n            mainObject.player.y = mainObject.dom.y = -80;\n            moveToPoint('player', display.centerW + 30, 136, false);\n            moveToPoint('dom', display.centerW - 30, 136, false);\n            mainConfig.moveFinishedEvent.player = function () {\n                mainConfig.lookAt.player = mainObject.dom;\n                mainConfig.lookAt.dom = mainObject.player;\n                if(!ui.dialogGroup.visible) {\n                    ui.skip.setVisible(true);\n                    ui.dialogGroup.setVisible(true);\n                }\n                dialog();\n            }\n            mainConfig.moveFinishedEvent.dom = function () {\n                mainObject.dom.play('dom-talk');\n            }\n\n            for (let i = 0; i < mainObject.sheeps.length; i++) {\n                let sheep = mainObject.sheeps[i];\n                mainConfig.sheepBlinkTimer[i] = setTimeout(function () {\n                    if(sheep.anims.currentAnim.key === 'sheep-stand') sheep.play('sheep-talk');\n                }, Math.round(Math.random() * 2400));\n            }\n            for (let i = 0; i < mainObject.sheeps.length; i++) {\n                let sheep = mainObject.sheeps[i];\n                sheep.on('animationcomplete', function () {\n                    if(sheep.anims.currentAnim.key === 'sheep-talk') {\n                        sheep.play('sheep-stand');\n                        sheepTalk(i ,sheep);\n                    }\n                });\n            }\n        }\n        else if(chapterIdx === 3){\n            maps.navMesh.destroy();\n            setVisibleObjects(false, mainObject.sheeps);\n            setVisibleObjects(false, [ui.skip, ui.bridge, mainObject.man]);\n            setVisibleObjects(true, [mainObject.fishman]);\n            maps.navMesh = scene.navMeshPlugin.buildMeshFromTiled(\"mesh\", maps.objectLayer[3], 12.5);\n            mainObject.player.x = display.width + 40;\n            mainObject.dom.x = display.width + 120;\n            mainObject.player.y = mainObject.dom.y = 80;\n            moveToPoint('player', 240, 100, false);\n            moveToPoint('dom', 280, 100, false);\n            mainConfig.moveFinishedEvent.player = function () {\n                mainConfig.lookAt.player = mainObject.dom;\n                mainConfig.lookAt.dom = mainObject.player;\n                if(!ui.dialogGroup.visible) {\n                    ui.skip.setVisible(true);\n                    ui.dialogGroup.setVisible(true);\n                }\n                dialog();\n            }\n            mainConfig.moveFinishedEvent.dom = function () {\n                mainObject.dom.play('dom-talk');\n            }\n        }\n    }\n}"],"names":[],"sourceRoot":""}