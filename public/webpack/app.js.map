{"version":3,"file":"app.js","mappings":";;;;;AAAA,qEAAqE,kBAAkB,gBAAgB,yBAAyB;AAChI;AACA,iBAAiB;AACjB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,WAAW;AAC/B;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,WAAW;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,8CAA8C;AACxG,oDAAoD,8CAA8C;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2EAA2E,4BAA4B;AACvG;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,4BAA4B;AACzF;AACA;AACA,KAAK;AACL;AACA;AACA,6DAA6D,4BAA4B;AACzF;AACA;AACA,KAAK;AACL;AACA;AACA,6DAA6D,4BAA4B;AACzF;AACA;AACA,KAAK;;AAEL;AACA;AACA,0DAA0D,4BAA4B;AACtF;AACA;AACA,KAAK;AACL;AACA;AACA,0DAA0D,4BAA4B;AACtF;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2EAA2E,YAAY;AACvF;AACA;AACA;AACA;AACA;AACA,qEAAqE,YAAY;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,kCAAkC;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,gBAAgB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C","sources":["webpack://gajwa-playground/./public/rebuild.js"],"sourcesContent":["console.log(\"%c@ MYZY.SPACE 2021 POWERED BY MYZY_\", \"color: #00ff00; font-weight: 900; font-size: 1em; background-color: black; padding: 1rem\");\nconst font = new FontFaceObserver('dgm').load();\nconst display = {width : 320, height: 640, centerW : 160, centerH: 320 };\nconst fontConfig = {font: '32px \"dgm\"', color: '#fff'};\nconst config = {\n    type: Phaser.AUTO,\n    width: display.width,\n    height: display.height,\n    physics: {\n        default: 'arcade',\n        arcade: {\n            //debug: true\n        }\n    },\n    scene: {\n        preload: preload,\n        create: create,\n        update: update\n    },\n    parent: 'canvas',\n    pixelArt: true,\n    plugins: {\n        scene: [\n            {\n                key: \"PhaserNavMeshPlugin\", // Key to store the plugin class under in cache\n                plugin: PhaserNavMeshPlugin, // Class that constructs plugins\n                mapping: \"navMeshPlugin\", // Property mapping to use for the scene, e.g. this.navMeshPlugin\n                start: true\n            },\n        ]\n    }\n};\nconst game = new Phaser.Game(config);\nconst mainObject = {\n    player : 'main player',\n    dom : 'dom'\n};\nconst object = {};\nconst mainConfig = {\n    playerTarget : {x: 0, y: 0},\n    playerCount : 0,\n    playerPath : [],\n    playerMovable : false,\n    // 이동 후 바라볼 오브젝트\n    lookAt: null,\n    moveFinishedEvent: null,\n\n    domTarget : {x: 0, y: 0},\n    domCount : 0,\n    domPath : [],\n    domFollow: false\n}\nconst timer = {};\nconst event = {};\nconst maps = {};\nconst ui = {};\nconst line = {};\nconst debug = {};\nconst status = {\n    scene: 'title',\n    index: 0,\n    chapterIdx: 0\n};\n\nfunction preload() {\n    // TODO 프리로드\n    // data\n    this.load.json('text', 'data/text.json');\n    // tile\n    this.load.tilemapTiledJSON(\"map\", \"map/newmap.json\");\n    this.load.image(\"tileset\", \"map/set.png\");\n    // sprites\n    this.load.spritesheet('player', 'image/player.png', { frameWidth: 32, frameHeight: 32, endFrame: 7 });\n    this.load.spritesheet('dom', 'image/dom.png', { frameWidth: 32, frameHeight: 32, endFrame: 7 });\n    this.load.image(\"rock\", \"image/rock.png\");\n    // UI\n    this.load.image('nineslice', 'image/nineslice.png');\n    // plugins\n    this.load.plugin('rexninepatchplugin', 'rexninepatchplugin.min.js', true);\n    // particle\n    this.load.image('particle', 'image/particle.png');\n}\nfunction create() {\n    setLines(this);\n    setAnimations(this);\n    createGraphics(this);\n    createUIObjects(this);\n    createCharacters(this);\n    createObjects(this);\n    createParticles(this);\n    buildMap(this);\n    setLayer(this);\n    this.input.on('pointerup', pointer => {\n        mainConfig.playerCount = 1;\n        mainConfig.playerPath = maps.navMesh.findPath(mainObject.player, { x: pointer.x, y: pointer.y });\n        if(mainConfig.playerPath === null || mainConfig.playerPath.length < 1) return;\n        if(mainConfig.playerMovable) moveCharacter(mainObject.player);\n        //path_log();\n    });\n}\nfunction update() {\n    let dis = {\n        player: Phaser.Math.Distance.Between(mainObject.player.x, mainObject.player.y, mainConfig.playerTarget.x, mainConfig.playerTarget.y),\n        dom: Phaser.Math.Distance.Between(mainObject.dom.x, mainObject.dom.y, mainConfig.domTarget.x, mainConfig.domTarget.y),\n        each: Phaser.Math.Distance.Between(mainObject.player.x, mainObject.player.y, mainObject.dom.x, mainObject.dom.y),\n    }\n    \n    if (mainObject.player.body.speed > 0){\n        if (dis.player < 4){\n            // 목적지 도착시 플레이어 정지\n            if(mainConfig.playerPath === null || mainConfig.playerPath.length < 1 || mainConfig.playerPath.length === mainConfig.playerCount + 1) {\n                mainObject.player.body.reset(mainObject.player.x, mainObject.player.y);\n                if(mainObject.player.anims.currentAnim.key !== 'player-stand') mainObject.player.play('player-stand');\n                moveFinished(mainObject.player);\n            }\n            // 다음 경로로 변경\n            else {\n                mainConfig.playerCount++;\n                moveCharacter(mainObject.player);\n            }\n        }\n        // 플레이어와 멀때 따라가기 경로\n        if(dis.each > 80 && mainConfig.domFollow){\n            moveToPoint(mainObject.dom, mainObject.player.x, mainObject.player.y);\n        }\n    }\n    if (mainObject.dom.body.speed > 0){\n        if (dis.dom < 4){\n            // 목적지 도착시 정지\n            if(mainConfig.domPath === null || mainConfig.domPath.length < 1 || mainConfig.domPath.length === mainConfig.domCount + 1) {\n                mainObject.dom.body.reset(mainObject.dom.x, mainObject.dom.y);\n                if(mainObject.dom.anims.currentAnim.key !== 'dom-stand') mainObject.dom.play('dom-stand');\n                moveFinished(mainObject.dom);\n            }\n            // 다음 경로로 변경\n            else {\n                mainConfig.domCount++;\n                moveCharacter(mainObject.dom);\n            }\n        }\n        // 플레이어와 가까울때 정지\n        else if(dis.each < 40 && mainConfig.domFollow){\n            mainObject.dom.body.reset(mainObject.dom.x, mainObject.dom.y);\n            if(mainObject.dom.anims.currentAnim.key !== 'dom-stand') mainObject.dom.play('dom-stand');\n        }\n    }\n    // 레이어 순서 정렬\n    mainObject.group.list.sort(function(a, b) {\n        return a.y > b.y ? 1 : -1;\n    });\n\n}\n\n// TODO 오브젝트 생성\nfunction buildMap(scene) {\n    // 타일맵 생성 <br>\n    // 네비메쉬 : maps.navMesh <br>\n    // 벽 레이어 : maps.wallLayer\n    maps.tilemap = scene.add.tilemap(\"map\");\n    maps.tileset = maps.tilemap.addTilesetImage(\"tileset\", \"tileset\");\n    maps.tilemap.createLayer(\"bg\", maps.tileset);\n    maps.wallLayer = maps.tilemap.createLayer(\"walls\", maps.tileset).setVisible(false);\n    maps.objectLayer = maps.tilemap.getObjectLayer(\"navmesh\");\n    maps.navMesh = scene.navMeshPlugin.buildMeshFromTiled(\"mesh\", maps.objectLayer, 12.5);\n}\nfunction createCharacters(scene) {\n    // 메인 캐릭터 생성 <br>\n    // 플레이어 오브젝트 : mainObject.player\n    mainObject.player = scene.physics.add.sprite(display.centerW, 180, 'player')\n        .setOrigin(0.5, 1).setScale(2).setSize(16, 16).setOffset(8, 16).play('player-stand');\n    mainObject.dom = scene.physics.add.sprite(display.centerW - 60, 180, 'dom')\n        .setOrigin(0.5, 1).setScale(2).setSize(16, 16).setOffset(8, 16).play('dom-stand').setVisible(false);\n}\nfunction createGraphics(scene) {\n    // TODO 그래픽 생성\n    // 디버그 그래픽\n    debug.graphics = scene.add.graphics();\n    debug.graphics.lineStyle(1, 0x00ff00, 1);\n    debug.graphics.fillStyle( 0xff0000, 1);\n}\nfunction createUIObjects(scene) {\n    // TODO UI 오브젝트 생성\n    ui.cam = scene.cameras.main;\n    ui.skip = scene.add.rectangle(display.centerW, display.centerH, display.width, display.height, 0x00ff00, 0)\n        .setInteractive();\n    ui.background = scene.add.rectangle(display.centerW, display.centerH, display.width, display.height, 0x000000);\n    ui.title = scene.add.text(display.centerW, display.centerH, 'SHADOW OF MYZY', fontConfig)\n        .setAlign('center').setOrigin(0.5);\n    ui.largeText = scene.add.text(display.centerW, display.centerH, '', fontConfig)\n        .setAlign('center').setOrigin(0.5).setVisible(false);\n\n    ui.dialogGroup = scene.add.container();\n    ui.dialogBox = scene.add.rexNinePatch({\n        x: display.centerW, y: display.height - 10,\n        width: (display.width - 20) * 0.5, height: 180 * 0.5,\n        key: 'nineslice',\n        columns: [8, undefined, 8],\n        rows: [8, undefined, 8],\n    }).setOrigin(0.5, 1).setScale(2);\n    ui.dialog = scene.add.text(30, display.height - 160, '', fontConfig).setFontSize(16).setLineSpacing(4);\n    ui.dialogGroup.add([ui.dialogBox, ui.dialog]).setVisible(false);\n    \n    ui.skip.on('pointerup', function () {\n        skip();\n    });\n}\nfunction createParticles(scene) {\n    let emitZone = new Phaser.Geom.Rectangle(-200, -600, 200, 1200);\n    mainObject.particles = scene.add.particles('particle');\n    let emitter = mainObject.particles.createEmitter({\n        x: 0,\n        y: 0,\n        speed: 80,\n        gravityX: 120,\n        gravityY: 100,\n        lifespan: 6000,\n        quantity: 0.5,\n        scale: 2,\n        emitZone: { source: emitZone }\n    });\n}\nfunction createObjects(scene) {\n    // 기타 오브젝트 생성\n    object.rock = [];\n    object.rock[0] = scene.add.sprite(0, display.centerH + 52, 'rock').setScale(2);\n    object.rock[1] = scene.add.sprite(display.width, display.centerH + 52, 'rock').setScale(2);\n}\nfunction setLayer(scene) {\n    // TODO 레이어 및 그룹 오브젝트 생성\n    mainObject.layer = scene.add.layer();\n\n    mainObject.group = scene.add.container();\n    mainObject.group.add([object.rock[0], object.rock[1], mainObject.player, mainObject.dom]);\n\n    ui.group = scene.add.container();\n    ui.group.add([ui.background, ui.dialogGroup, ui.largeText, ui.title, ui.skip]);\n\n    // 레이어 정렬\n    mainObject.layer.add(mainObject.group);\n    mainObject.layer.add(mainObject.particles);\n    mainObject.layer.add(ui.group);\n}\nfunction setAnimations(scene) {\n    // TODO 애니메이션 추가\n    scene.anims.create({\n        key: 'player-stand',\n        frames: scene.anims.generateFrameNumbers('player', { start: 0, end: 1, first: 0 }),\n        frameRate: 2,\n        repeat: -1\n    });\n    scene.anims.create({\n        key: 'player-seek',\n        frames: scene.anims.generateFrameNumbers('player', { start: 2, end: 3, first: 0 }),\n        frameRate: 2,\n        repeat: -1\n    });\n    scene.anims.create({\n        key: 'player-run',\n        frames: scene.anims.generateFrameNumbers('player', { start: 4, end: 7, first: 0 }),\n        frameRate: 8,\n        repeat: -1\n    });\n\n    scene.anims.create({\n        key: 'dom-stand',\n        frames: scene.anims.generateFrameNumbers('dom', { start: 0, end: 3, first: 0 }),\n        frameRate: 4,\n        repeat: -1\n    });\n    scene.anims.create({\n        key: 'dom-run',\n        frames: scene.anims.generateFrameNumbers('dom', { start: 6, end: 7, first: 0 }),\n        frameRate: 8,\n        repeat: -1\n    });\n}\nfunction setLines(scene) {\n    // TODO 텍스트 데이터 생성 및 정리\n    let jsonText = scene.cache.json.get('text');\n    line.chapter = jsonText.chapter;\n    line.task = jsonText.task;\n    line.opening = jsonText.opening;\n    line.story = jsonText.story;\n    console.log(line);\n}\n// TODO 동작 메서드\nfunction Move(character, target, speed) {\n    game.scene.scenes[0].physics.moveToObject(character, target, speed);\n}\nfunction moveCharacter(character) {\n    if(character === mainObject.player){\n        mainConfig.playerTarget.x = mainConfig.playerPath[mainConfig.playerCount].x;\n        mainConfig.playerTarget.y = mainConfig.playerPath[mainConfig.playerCount].y;\n        if(character.anims.currentAnim.key !== 'player-run') character.play('player-run');\n        mainObject.player.setFlipX(mainObject.player.x - mainConfig.playerTarget.x > 0);\n        Move(mainObject.player, mainConfig.playerTarget, 160);\n    }\n    else if(character === mainObject.dom){\n        mainConfig.domTarget.x = mainConfig.domPath[mainConfig.domCount].x;\n        mainConfig.domTarget.y = mainConfig.domPath[mainConfig.domCount].y;\n        if(character.anims.currentAnim.key !== 'dom-run') character.play('dom-run');\n        mainObject.dom.setFlipX(mainObject.dom.x - mainConfig.domTarget.x > 0);\n        Move(mainObject.dom, mainConfig.domTarget, 160);\n    }\n}\nfunction moveToPoint(character, x, y){\n    if(character === mainObject.player){\n        mainConfig.playerMovable = false;\n        mainConfig.playerCount = 1;\n        mainConfig.playerPath = maps.navMesh.findPath(mainObject.player, { x: x, y: y });\n        if(mainConfig.playerPath === null || mainConfig.playerPath.length < 1) return;\n        moveCharacter(mainObject.player);\n    }\n    else if(character === mainObject.dom){\n        mainConfig.domCount = 1;\n        mainConfig.domPath = maps.navMesh.findPath(mainObject.dom, { x: x, y: y });\n        if(mainConfig.domPath === null || mainConfig.domPath.length < 1) return;\n        moveCharacter(mainObject.dom);\n    }\n}\nfunction path_log() {\n    debug.graphics.clear();\n    if(mainConfig.playerPath === null) {\n        return;\n    }\n    let line = new Phaser.Curves.Path(mainObject.player.x, mainObject.player.y);\n    for (let i = 0; i < mainConfig.playerPath.length; i++)\n    {\n        line.lineTo(mainConfig.playerPath[i].x, mainConfig.playerPath[i].y);\n        debug.graphics.fillRect(mainConfig.playerPath[i].x - 4, mainConfig.playerPath[i].y - 4, 8, 8);\n    }\n    debug.graphics.lineStyle(1, 0xff0000, 1);\n    line.draw(debug.graphics);\n}\nfunction RandomPlusMinus() {\n    return (Math.random() > 0.5) ? 1 : -1;\n}\nfunction RandomizePos(obj, x, y, min, max) {\n    obj.x = x + min + Math.random() * max * RandomPlusMinus();\n    obj.y = y + min + Math.random() * max * RandomPlusMinus();\n}\nfunction shakeObject(obj, max, speed, time) {\n    if(timer.shaker !== undefined) return;\n    const x = obj.x;\n    const y = obj.y;\n    setTimeout(()=> {\n        clearTimeout(timer.shaker);\n        timer.shaker = undefined;\n        obj.x = x;\n        obj.y = y;\n    }, time);\n    repeat();\n    function repeat() {\n        RandomizePos(obj, x, y, 0, max);\n        timer.shaker = setTimeout(repeat, speed);\n    }\n}\nfunction typewriteText(object, txt, speed) {\n    eventByIndex();\n    game.scene.scenes[0].time.removeEvent(event.type);\n    const length = txt.length\n    // 타이핑 도중에 재실행\n    if(event.typing === true){\n        event.typing = false;\n        object.text = txt;\n        status.index++;\n    }\n    else {\n        object.text = '';\n        let i = 0;\n        event.type = game.scene.scenes[0].time.addEvent({\n            callback: () => {\n                object.text += txt[i]\n                ++i\n                if(i < length){\n                    event.typing = true;\n                }\n                else {\n                    // 타이핑이 끝나고 실행\n                    event.typing = false;\n                    object.text = txt;\n                    status.index++;\n                }\n            },\n            repeat: length - 1,\n            delay: speed\n        })\n    }\n}\n// TODO 이벤트 메서드\nfunction skip() {\n    if(status.scene === 'title'){\n        status.scene = 'opening';\n        ui.title.setVisible(false);\n        ui.largeText.setVisible(true);\n        ui.largeText.text = line.opening[status.index];\n        shakeObject(ui.largeText, 20, 20, 240);\n        status.index++;\n    }\n    else if(status.scene === 'opening'){\n        if(line.opening[status.index] === undefined) {\n            status.scene = 'chapter';\n            status.index = 0;\n            status.chapterIdx = 0;\n\n            ui.background.setVisible(false);\n            ui.largeText.setVisible(false);\n\n            //zoomOut();\n            ui.dialogGroup.setVisible(true);\n            dialog();\n            ui.skip.setInteractive();\n\n            function zoomOut() {\n                ui.skip.disableInteractive();\n                ui.cam.zoom = 4;\n                ui.cam.pan(mainObject.player.x, mainObject.player.y - 32, 1);\n                setTimeout(() => ui.cam.pan(display.centerW, display.centerH, 2800, Phaser.Math.Easing.Quintic.InOut, true), 200);\n                ui.cam.zoomTo(1, 3000, Phaser.Math.Easing.Quintic.InOut);\n                ui.cam.on(Phaser.Cameras.Scene2D.Events.ZOOM_COMPLETE, () => {\n                    ui.dialogGroup.setVisible(true);\n                    dialog();\n                    ui.skip.setInteractive();\n                });\n\n            }\n        }\n        else {\n            ui.largeText.text = line.opening[status.index];\n            shakeObject(ui.largeText, 20, 20, 240);\n            status.index++;\n        }\n    }\n    else if(status.scene === 'chapter'){\n        dialog();\n    }\n}\nfunction dialog() {\n    if(line.story[status.chapterIdx][status.index] === '*close*'){\n        event.typing = false;\n        ui.dialogGroup.setVisible(false);\n        ui.skip.setVisible(false);\n        eventByIndex();\n        status.index++;\n    }\n    else {\n        typewriteText(ui.dialog, line.story[status.chapterIdx][status.index], 60);\n    }\n}\nfunction eventByIndex(){\n    let chapter = status.chapterIdx;\n    let index = status.index;\n    let scene = game.scene.scenes[0];\n\n    if(chapter === 0){\n        if(index === 4){\n            mainObject.player.play('player-seek');\n        }\n        if(index === 6){\n            mainObject.player.play('player-stand');\n            setTimeout(() => mainConfig.playerMovable = true, 20);\n            let col = scene.physics.add.overlap(mainObject.player, mainObject.dom, function () {\n                console.log('found');\n                col.active = false;\n                setVisibleObjects(true, [mainObject.dom, ui.skip, ui.dialogGroup]);\n                moveToPoint(mainObject.player, mainObject.dom.x + 60, mainObject.dom.y);\n                mainConfig.lookAt = mainObject.dom;\n                dialog();\n            }, null, this);\n        }\n        if(index === 12){\n            setTimeout(() => mainConfig.playerMovable = true, 20);\n            moveToPoint(mainObject.dom, display.centerW, display.height - 200);\n            mainConfig.moveFinishedEvent = function () {\n                let col = scene.physics.add.overlap(mainObject.player, mainObject.dom, function () {\n                    col.active = false;\n                    setVisibleObjects(true, [ui.skip, ui.dialogGroup]);\n                    mainConfig.playerMovable = false;\n                    mainConfig.lookAt = mainObject.dom;\n                    moveToPoint(mainObject.player, mainObject.dom.x - 60, mainObject.dom.y);\n                    dialog();\n                }, null, this);\n            }\n        }\n        if(index === 19){\n            setTimeout(() => mainConfig.playerMovable = true, 20);\n            setTimeout(() => mainConfig.domFollow = true, 20);\n        }\n    }\n}\nfunction setVisibleObjects(bool, arr) {\n    // 배열 오브젝트 모두 setVisible 실행\n    for (let i = 0; i < arr.length; i++) {\n        arr[i].setVisible(bool);\n    }\n}\nfunction moveFinished(character) {\n    // 이동 완료 후 바라보기\n    if(mainConfig.lookAt !== null) {\n        character.setFlipX(character.x - mainConfig.lookAt.x > 0);\n        mainConfig.lookAt = null;\n    }\n    if(mainConfig.moveFinishedEvent !== null) {\n        mainConfig.moveFinishedEvent();\n        mainConfig.moveFinishedEvent = null;\n    }\n}"],"names":[],"sourceRoot":""}